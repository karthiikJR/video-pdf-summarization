[
  {
    "text": "what's going on guys assalamu alaikum",
    "start": 0.16,
    "duration": 4.96
  },
  {
    "text": "welcome to amigos code in this video i",
    "start": 1.839,
    "duration": 6.08
  },
  {
    "text": "want to take you through java streams",
    "start": 5.12,
    "duration": 5.28
  },
  {
    "text": "this course is part of the brand new",
    "start": 7.919,
    "duration": 4.081
  },
  {
    "text": "course that i've just released on my",
    "start": 10.4,
    "duration": 4.8
  },
  {
    "text": "website called java streams api and the",
    "start": 12.0,
    "duration": 7.52
  },
  {
    "text": "aim is for you not to write boilerplate",
    "start": 15.2,
    "duration": 7.2
  },
  {
    "text": "code anymore i.e a way to move away from",
    "start": 19.52,
    "duration": 5.519
  },
  {
    "text": "imperative programming to declarative",
    "start": 22.4,
    "duration": 4.56
  },
  {
    "text": "programming you know sometimes we have",
    "start": 25.039,
    "duration": 4.32
  },
  {
    "text": "to define every single moving part of",
    "start": 26.96,
    "duration": 5.119
  },
  {
    "text": "our code creating a list",
    "start": 29.359,
    "duration": 5.04
  },
  {
    "text": "how to loop how to increment the loop",
    "start": 32.079,
    "duration": 4.16
  },
  {
    "text": "how to add to a list",
    "start": 34.399,
    "duration": 4.641
  },
  {
    "text": "how to print how to map how to perform",
    "start": 36.239,
    "duration": 5.281
  },
  {
    "text": "transformations and sometimes we can end",
    "start": 39.04,
    "duration": 5.28
  },
  {
    "text": "up writing hundred lines of code whereas",
    "start": 41.52,
    "duration": 5.68
  },
  {
    "text": "really we just have to write like six or",
    "start": 44.32,
    "duration": 3.759
  },
  {
    "text": "seven",
    "start": 47.2,
    "duration": 3.44
  },
  {
    "text": "so this course is all about making you a",
    "start": 48.079,
    "duration": 5.681
  },
  {
    "text": "better programmer and enabling you to",
    "start": 50.64,
    "duration": 5.52
  },
  {
    "text": "write code that really matters if you're",
    "start": 53.76,
    "duration": 4.799
  },
  {
    "text": "new to my channel go ahead and literally",
    "start": 56.16,
    "duration": 5.52
  },
  {
    "text": "just take two seconds and smash that",
    "start": 58.559,
    "duration": 5.361
  },
  {
    "text": "like button so i can keep on recording",
    "start": 61.68,
    "duration": 3.68
  },
  {
    "text": "videos like this",
    "start": 63.92,
    "duration": 4.239
  },
  {
    "text": "so in this course so on my website you",
    "start": 65.36,
    "duration": 4.64
  },
  {
    "text": "can enroll through this course",
    "start": 68.159,
    "duration": 4.241
  },
  {
    "text": "and basically uh it's more about the",
    "start": 70.0,
    "duration": 4.72
  },
  {
    "text": "functional programming style",
    "start": 72.4,
    "duration": 4.56
  },
  {
    "text": "and if you've done my course on",
    "start": 74.72,
    "duration": 4.96
  },
  {
    "text": "java functions by function consumers by",
    "start": 76.96,
    "duration": 5.04
  },
  {
    "text": "consumers then this course will make",
    "start": 79.68,
    "duration": 4.24
  },
  {
    "text": "fully sense but if not you can enroll to",
    "start": 82.0,
    "duration": 5.119
  },
  {
    "text": "that course it's absolutely for free but",
    "start": 83.92,
    "duration": 4.96
  },
  {
    "text": "in this course we go over what is",
    "start": 87.119,
    "duration": 4.32
  },
  {
    "text": "functional programming stream api",
    "start": 88.88,
    "duration": 4.879
  },
  {
    "text": "understanding transformations with map",
    "start": 91.439,
    "duration": 6.161
  },
  {
    "text": "reduce flat map filtering collectors",
    "start": 93.759,
    "duration": 8.161
  },
  {
    "text": "statistics like sql grouping and sorting",
    "start": 97.6,
    "duration": 7.839
  },
  {
    "text": "and pretty much how the api does work",
    "start": 101.92,
    "duration": 4.72
  },
  {
    "text": "under the hood",
    "start": 105.439,
    "duration": 2.241
  },
  {
    "text": "so",
    "start": 106.64,
    "duration": 3.759
  },
  {
    "text": "basically right here so if i open up you",
    "start": 107.68,
    "duration": 4.24
  },
  {
    "text": "can see that there's quite a lot of",
    "start": 110.399,
    "duration": 4.08
  },
  {
    "text": "videos here and also a bunch of",
    "start": 111.92,
    "duration": 5.68
  },
  {
    "text": "exercises to make sure that you indeed",
    "start": 114.479,
    "duration": 5.28
  },
  {
    "text": "learn from this course",
    "start": 117.6,
    "duration": 4.32
  },
  {
    "text": "if you want to enroll for this course i",
    "start": 119.759,
    "duration": 4.4
  },
  {
    "text": "do have a coupon code so that you can",
    "start": 121.92,
    "duration": 4.72
  },
  {
    "text": "enroll at elf price and enjoy this",
    "start": 124.159,
    "duration": 4.481
  },
  {
    "text": "course if you're new to my channel go",
    "start": 126.64,
    "duration": 4.08
  },
  {
    "text": "ahead and subscribe give me a thumbs up",
    "start": 128.64,
    "duration": 4.0
  },
  {
    "text": "so i can keep on recording these videos",
    "start": 130.72,
    "duration": 4.4
  },
  {
    "text": "and without further ado let's begin this",
    "start": 132.64,
    "duration": 5.8
  },
  {
    "text": "crash course",
    "start": 135.12,
    "duration": 3.32
  },
  {
    "text": "for this course i'm going to be using",
    "start": 144.4,
    "duration": 4.559
  },
  {
    "text": "intellij as the ide of choice but you",
    "start": 146.16,
    "duration": 6.56
  },
  {
    "text": "can use any other ide such as netbeans",
    "start": 148.959,
    "duration": 7.201
  },
  {
    "text": "or eclipse or even vs code if you wish",
    "start": 152.72,
    "duration": 5.68
  },
  {
    "text": "to do so but you'll see that if you use",
    "start": 156.16,
    "duration": 4.96
  },
  {
    "text": "the exact same ide then you'll have no",
    "start": 158.4,
    "duration": 5.44
  },
  {
    "text": "issues running and",
    "start": 161.12,
    "duration": 5.839
  },
  {
    "text": "completing all the exercises so here",
    "start": 163.84,
    "duration": 6.56
  },
  {
    "text": "navigate to jetbrains.com forward idea",
    "start": 166.959,
    "duration": 5.36
  },
  {
    "text": "and download",
    "start": 170.4,
    "duration": 4.32
  },
  {
    "text": "so in here you can either download the",
    "start": 172.319,
    "duration": 4.081
  },
  {
    "text": "ultimate edition",
    "start": 174.72,
    "duration": 5.04
  },
  {
    "text": "or the community edition so download",
    "start": 176.4,
    "duration": 5.68
  },
  {
    "text": "either and you can see that they also",
    "start": 179.76,
    "duration": 5.28
  },
  {
    "text": "have for apple silicon if you have a mac",
    "start": 182.08,
    "duration": 5.519
  },
  {
    "text": "with m1 chips like myself",
    "start": 185.04,
    "duration": 3.44
  },
  {
    "text": "so",
    "start": 187.599,
    "duration": 2.801
  },
  {
    "text": "go ahead and download and install",
    "start": 188.48,
    "duration": 4.32
  },
  {
    "text": "intellij and also",
    "start": 190.4,
    "duration": 5.68
  },
  {
    "text": "actually let me just mention that so",
    "start": 192.8,
    "duration": 5.84
  },
  {
    "text": "yeah so right here i think it's better",
    "start": 196.08,
    "duration": 5.84
  },
  {
    "text": "actually for you to install using",
    "start": 198.64,
    "duration": 4.64
  },
  {
    "text": "toolbox",
    "start": 201.92,
    "duration": 4.319
  },
  {
    "text": "so get the toolbox and then here you can",
    "start": 203.28,
    "duration": 6.08
  },
  {
    "text": "actually install all of the other ides",
    "start": 206.239,
    "duration": 5.841
  },
  {
    "text": "and also update intellij with no issue",
    "start": 209.36,
    "duration": 4.239
  },
  {
    "text": "so you can see that you can update",
    "start": 212.08,
    "duration": 3.92
  },
  {
    "text": "automatically rollbacks downgrades on",
    "start": 213.599,
    "duration": 3.681
  },
  {
    "text": "and so forth",
    "start": 216.0,
    "duration": 3.28
  },
  {
    "text": "so give that a go",
    "start": 217.28,
    "duration": 2.879
  },
  {
    "text": "and",
    "start": 219.28,
    "duration": 3.12
  },
  {
    "text": "make sure to use intellij so that",
    "start": 220.159,
    "duration": 7.08
  },
  {
    "text": "everything works without no issues",
    "start": 222.4,
    "duration": 4.839
  },
  {
    "text": "so in order for you to get started with",
    "start": 232.319,
    "duration": 4.321
  },
  {
    "text": "this course i already have all the",
    "start": 234.799,
    "duration": 5.281
  },
  {
    "text": "examples and the source code prepared",
    "start": 236.64,
    "duration": 5.44
  },
  {
    "text": "which i would like you to use",
    "start": 240.08,
    "duration": 5.359
  },
  {
    "text": "so navigate to this repo github.com",
    "start": 242.08,
    "duration": 6.159
  },
  {
    "text": "amigos code forward slash java dash",
    "start": 245.439,
    "duration": 4.0
  },
  {
    "text": "streams",
    "start": 248.239,
    "duration": 4.961
  },
  {
    "text": "and in here i do have this readme but",
    "start": 249.439,
    "duration": 5.681
  },
  {
    "text": "more important you can see that i do",
    "start": 253.2,
    "duration": 4.559
  },
  {
    "text": "have two branches i've got main",
    "start": 255.12,
    "duration": 4.399
  },
  {
    "text": "and start",
    "start": 257.759,
    "duration": 4.561
  },
  {
    "text": "so let's together clone this",
    "start": 259.519,
    "duration": 5.201
  },
  {
    "text": "in here we can just basically",
    "start": 262.32,
    "duration": 4.08
  },
  {
    "text": "grab this",
    "start": 264.72,
    "duration": 6.32
  },
  {
    "text": "and then you can either use https or ssh",
    "start": 266.4,
    "duration": 6.48
  },
  {
    "text": "so let me just grab this",
    "start": 271.04,
    "duration": 3.36
  },
  {
    "text": "command c",
    "start": 272.88,
    "duration": 4.48
  },
  {
    "text": "and i'm going to open up intellij",
    "start": 274.4,
    "duration": 4.239
  },
  {
    "text": "and in here",
    "start": 277.36,
    "duration": 4.72
  },
  {
    "text": "i'm going to say get from vcs",
    "start": 278.639,
    "duration": 5.84
  },
  {
    "text": "we can pass the url",
    "start": 282.08,
    "duration": 4.16
  },
  {
    "text": "just like so",
    "start": 284.479,
    "duration": 2.801
  },
  {
    "text": "and",
    "start": 286.24,
    "duration": 3.36
  },
  {
    "text": "i can basically say clone",
    "start": 287.28,
    "duration": 3.12
  },
  {
    "text": "and",
    "start": 289.6,
    "duration": 2.48
  },
  {
    "text": "i'm going to clone into",
    "start": 290.4,
    "duration": 4.239
  },
  {
    "text": "users amigos code id project java",
    "start": 292.08,
    "duration": 6.0
  },
  {
    "text": "streams so clone",
    "start": 294.639,
    "duration": 3.441
  },
  {
    "text": "and i'm going to trust everything under",
    "start": 298.96,
    "duration": 4.72
  },
  {
    "text": "this folder",
    "start": 301.199,
    "duration": 5.121
  },
  {
    "text": "and there we go so you can see that i",
    "start": 303.68,
    "duration": 4.72
  },
  {
    "text": "successfully cloned",
    "start": 306.32,
    "duration": 5.84
  },
  {
    "text": "the project here if i close that",
    "start": 308.4,
    "duration": 5.84
  },
  {
    "text": "so what i want to do is in here have a",
    "start": 312.16,
    "duration": 4.0
  },
  {
    "text": "look we have two branches",
    "start": 314.24,
    "duration": 5.28
  },
  {
    "text": "in here at the very bottom right corner",
    "start": 316.16,
    "duration": 6.0
  },
  {
    "text": "so we have main and start",
    "start": 319.52,
    "duration": 4.32
  },
  {
    "text": "so i'm not going to switch just now so",
    "start": 322.16,
    "duration": 3.599
  },
  {
    "text": "what i want to do for you is i want to",
    "start": 323.84,
    "duration": 3.359
  },
  {
    "text": "open up the",
    "start": 325.759,
    "duration": 5.201
  },
  {
    "text": "main folder so java streams and inside i",
    "start": 327.199,
    "duration": 6.56
  },
  {
    "text": "only have src and then test",
    "start": 330.96,
    "duration": 5.76
  },
  {
    "text": "and then java so all the examples for",
    "start": 333.759,
    "duration": 6.0
  },
  {
    "text": "this course will live inside of the test",
    "start": 336.72,
    "duration": 4.8
  },
  {
    "text": "folder in here so this is a maven",
    "start": 339.759,
    "duration": 2.801
  },
  {
    "text": "project",
    "start": 341.52,
    "duration": 3.04
  },
  {
    "text": "that contains all of the dependencies",
    "start": 342.56,
    "duration": 3.28
  },
  {
    "text": "that you need",
    "start": 344.56,
    "duration": 3.359
  },
  {
    "text": "so what i'm going to do is i'm going to",
    "start": 345.84,
    "duration": 3.52
  },
  {
    "text": "right click",
    "start": 347.919,
    "duration": 3.441
  },
  {
    "text": "in here so right click under java so",
    "start": 349.36,
    "duration": 3.92
  },
  {
    "text": "this green folder",
    "start": 351.36,
    "duration": 4.64
  },
  {
    "text": "and then run all tests",
    "start": 353.28,
    "duration": 4.56
  },
  {
    "text": "and you should see that everything",
    "start": 356.0,
    "duration": 5.039
  },
  {
    "text": "should just work",
    "start": 357.84,
    "duration": 4.0
  },
  {
    "text": "so",
    "start": 361.039,
    "duration": 2.081
  },
  {
    "text": "there we go",
    "start": 361.84,
    "duration": 3.68
  },
  {
    "text": "and these are all the examples that you",
    "start": 363.12,
    "duration": 5.04
  },
  {
    "text": "will cover throughout this course so 38",
    "start": 365.52,
    "duration": 4.32
  },
  {
    "text": "tests did pass",
    "start": 368.16,
    "duration": 3.44
  },
  {
    "text": "now let me hide this",
    "start": 369.84,
    "duration": 4.72
  },
  {
    "text": "and before i explain what's inside here",
    "start": 371.6,
    "duration": 4.64
  },
  {
    "text": "what i want to show you is",
    "start": 374.56,
    "duration": 5.52
  },
  {
    "text": "inside of palm.xml and inside i do have",
    "start": 376.24,
    "duration": 6.48
  },
  {
    "text": "this xml but what i want to show you is",
    "start": 380.08,
    "duration": 7.6
  },
  {
    "text": "that i do have junit guava a cert4j",
    "start": 382.72,
    "duration": 7.84
  },
  {
    "text": "json and then commons.io",
    "start": 387.68,
    "duration": 4.959
  },
  {
    "text": "so if you don't know about testing and",
    "start": 390.56,
    "duration": 4.079
  },
  {
    "text": "you want to learn about unit testing",
    "start": 392.639,
    "duration": 4.081
  },
  {
    "text": "integration mocking all that stuff i do",
    "start": 394.639,
    "duration": 4.0
  },
  {
    "text": "have a course on testing",
    "start": 396.72,
    "duration": 4.24
  },
  {
    "text": "but these are all the dependencies that",
    "start": 398.639,
    "duration": 5.201
  },
  {
    "text": "we need for this course and also i'm",
    "start": 400.96,
    "duration": 7.28
  },
  {
    "text": "using java 17. so here if i go to i",
    "start": 403.84,
    "duration": 8.079
  },
  {
    "text": "think it's under file",
    "start": 408.24,
    "duration": 7.04
  },
  {
    "text": "and then open up project structure",
    "start": 411.919,
    "duration": 5.761
  },
  {
    "text": "and right here have a look",
    "start": 415.28,
    "duration": 6.24
  },
  {
    "text": "project sdk and then open jdk 17",
    "start": 417.68,
    "duration": 6.639
  },
  {
    "text": "so if you want to follow along with 17",
    "start": 421.52,
    "duration": 5.44
  },
  {
    "text": "this should work or any other version so",
    "start": 424.319,
    "duration": 5.921
  },
  {
    "text": "here all you have to do is click on edit",
    "start": 426.96,
    "duration": 4.32
  },
  {
    "text": "and then",
    "start": 430.24,
    "duration": 2.399
  },
  {
    "text": "click on plus",
    "start": 431.28,
    "duration": 2.96
  },
  {
    "text": "and then download",
    "start": 432.639,
    "duration": 2.801
  },
  {
    "text": "jdk",
    "start": 434.24,
    "duration": 2.88
  },
  {
    "text": "and then select",
    "start": 435.44,
    "duration": 4.4
  },
  {
    "text": "oracle open jdk 17",
    "start": 437.12,
    "duration": 5.12
  },
  {
    "text": "and off you go",
    "start": 439.84,
    "duration": 3.28
  },
  {
    "text": "so",
    "start": 442.24,
    "duration": 3.359
  },
  {
    "text": "to be honest this is pretty much the",
    "start": 443.12,
    "duration": 5.84
  },
  {
    "text": "setup that you need for this course next",
    "start": 445.599,
    "duration": 5.761
  },
  {
    "text": "let me walk you through these folders in",
    "start": 448.96,
    "duration": 7.12
  },
  {
    "text": "here so beans examples and mock data",
    "start": 451.36,
    "duration": 4.72
  },
  {
    "text": "so in here i'm inside of this main",
    "start": 461.919,
    "duration": 5.28
  },
  {
    "text": "branch so this is the examples that you",
    "start": 464.479,
    "duration": 4.72
  },
  {
    "text": "will basically complete at the end of",
    "start": 467.199,
    "duration": 3.28
  },
  {
    "text": "this course",
    "start": 469.199,
    "duration": 3.68
  },
  {
    "text": "and let me quickly walk you through",
    "start": 470.479,
    "duration": 5.041
  },
  {
    "text": "this package in here so beans examples",
    "start": 472.879,
    "duration": 5.6
  },
  {
    "text": "and mock data so beans contains pretty",
    "start": 475.52,
    "duration": 4.16
  },
  {
    "text": "much the",
    "start": 478.479,
    "duration": 3.12
  },
  {
    "text": "models that we're going to use for this",
    "start": 479.68,
    "duration": 5.359
  },
  {
    "text": "course so a car class a person class and",
    "start": 481.599,
    "duration": 5.44
  },
  {
    "text": "a person dto",
    "start": 485.039,
    "duration": 6.56
  },
  {
    "text": "now these two classes so car and person",
    "start": 487.039,
    "duration": 9.041
  },
  {
    "text": "they basically are part of the mock data",
    "start": 491.599,
    "duration": 6.241
  },
  {
    "text": "and mock data",
    "start": 496.08,
    "duration": 4.559
  },
  {
    "text": "so mock data if i open this up",
    "start": 497.84,
    "duration": 4.32
  },
  {
    "text": "so this",
    "start": 500.639,
    "duration": 4.56
  },
  {
    "text": "here gives me a list of people and a",
    "start": 502.16,
    "duration": 4.719
  },
  {
    "text": "list of cars",
    "start": 505.199,
    "duration": 4.801
  },
  {
    "text": "now these are json arrays that can be",
    "start": 506.879,
    "duration": 6.481
  },
  {
    "text": "found under resources so cars.json so",
    "start": 510.0,
    "duration": 5.2
  },
  {
    "text": "this is a list of",
    "start": 513.36,
    "duration": 3.44
  },
  {
    "text": "a thousand",
    "start": 515.2,
    "duration": 4.399
  },
  {
    "text": "objects or a thousand cars",
    "start": 516.8,
    "duration": 5.119
  },
  {
    "text": "and the same for people",
    "start": 519.599,
    "duration": 4.56
  },
  {
    "text": "so then i basically just load them",
    "start": 521.919,
    "duration": 3.441
  },
  {
    "text": "inside",
    "start": 524.159,
    "duration": 3.68
  },
  {
    "text": "of this list and then return it back so",
    "start": 525.36,
    "duration": 5.599
  },
  {
    "text": "that we can use it in our tests",
    "start": 527.839,
    "duration": 6.481
  },
  {
    "text": "so if i open up examples let's look at",
    "start": 530.959,
    "duration": 5.601
  },
  {
    "text": "statistics which stream for example",
    "start": 534.32,
    "duration": 5.04
  },
  {
    "text": "right so here you'll see that you have",
    "start": 536.56,
    "duration": 6.48
  },
  {
    "text": "this first line in all of the tests",
    "start": 539.36,
    "duration": 6.479
  },
  {
    "text": "and you can see cars and then we just",
    "start": 543.04,
    "duration": 5.52
  },
  {
    "text": "use it so here we basically say mock",
    "start": 545.839,
    "duration": 5.761
  },
  {
    "text": "data and this is a static method so we",
    "start": 548.56,
    "duration": 5.12
  },
  {
    "text": "just have to say mock data get cars and",
    "start": 551.6,
    "duration": 3.679
  },
  {
    "text": "then we can use it",
    "start": 553.68,
    "duration": 4.08
  },
  {
    "text": "so the same throughout all of these",
    "start": 555.279,
    "duration": 4.081
  },
  {
    "text": "methods you'll see that we are using",
    "start": 557.76,
    "duration": 4.56
  },
  {
    "text": "either cars or so here i can say person",
    "start": 559.36,
    "duration": 5.2
  },
  {
    "text": "right so get people actually",
    "start": 562.32,
    "duration": 4.639
  },
  {
    "text": "so there you have it now what i need to",
    "start": 564.56,
    "duration": 4.32
  },
  {
    "text": "do is",
    "start": 566.959,
    "duration": 4.161
  },
  {
    "text": "so if i close everything",
    "start": 568.88,
    "duration": 3.92
  },
  {
    "text": "go ahead and",
    "start": 571.12,
    "duration": 4.48
  },
  {
    "text": "open up in here you can see that my",
    "start": 572.8,
    "duration": 5.36
  },
  {
    "text": "cursor is right here and i'm navigating",
    "start": 575.6,
    "duration": 3.6
  },
  {
    "text": "to the",
    "start": 578.16,
    "duration": 2.96
  },
  {
    "text": "lower right corner and i'm going to",
    "start": 579.2,
    "duration": 3.44
  },
  {
    "text": "click on main",
    "start": 581.12,
    "duration": 5.279
  },
  {
    "text": "and i want to check out this branch so",
    "start": 582.64,
    "duration": 5.68
  },
  {
    "text": "origin and then start",
    "start": 586.399,
    "duration": 5.601
  },
  {
    "text": "so check out and what this will give you",
    "start": 588.32,
    "duration": 5.76
  },
  {
    "text": "so in here so have a look if i open up",
    "start": 592.0,
    "duration": 4.0
  },
  {
    "text": "distinct and set",
    "start": 594.08,
    "duration": 3.6
  },
  {
    "text": "you can see that",
    "start": 596.0,
    "duration": 3.36
  },
  {
    "text": "uh oh actually let me open the same file",
    "start": 597.68,
    "duration": 4.24
  },
  {
    "text": "i think it was map and reduce",
    "start": 599.36,
    "duration": 5.52
  },
  {
    "text": "have a look all of that code is gone so",
    "start": 601.92,
    "duration": 4.479
  },
  {
    "text": "throughout this course i'm going to be",
    "start": 604.88,
    "duration": 3.519
  },
  {
    "text": "telling you right so open up",
    "start": 606.399,
    "duration": 2.961
  },
  {
    "text": "this",
    "start": 608.399,
    "duration": 3.44
  },
  {
    "text": "file for example or this class",
    "start": 609.36,
    "duration": 4.479
  },
  {
    "text": "and then you can see that i'm using",
    "start": 611.839,
    "duration": 4.56
  },
  {
    "text": "people here and then we'll basically use",
    "start": 613.839,
    "duration": 5.601
  },
  {
    "text": "these classes for learning streams and",
    "start": 616.399,
    "duration": 4.801
  },
  {
    "text": "you'll see all of the examples instead",
    "start": 619.44,
    "duration": 3.44
  },
  {
    "text": "of you having to write all of these",
    "start": 621.2,
    "duration": 4.8
  },
  {
    "text": "tests and classes which there is no need",
    "start": 622.88,
    "duration": 6.079
  },
  {
    "text": "so make sure that you check out the",
    "start": 626.0,
    "duration": 5.92
  },
  {
    "text": "start branch so that you can follow",
    "start": 628.959,
    "duration": 6.401
  },
  {
    "text": "along throughout this course with no",
    "start": 631.92,
    "duration": 4.4
  },
  {
    "text": "issues",
    "start": 635.36,
    "duration": 3.919
  },
  {
    "text": "if you have any questions please do let",
    "start": 636.32,
    "duration": 5.68
  },
  {
    "text": "me know otherwise let's kick off our",
    "start": 639.279,
    "duration": 8.12
  },
  {
    "text": "journey in learning java streams",
    "start": 642.0,
    "duration": 5.399
  },
  {
    "text": "what exactly is the java stream api",
    "start": 652.399,
    "duration": 5.521
  },
  {
    "text": "well to understand that let's focus on",
    "start": 655.839,
    "duration": 5.201
  },
  {
    "text": "the stream itself and in this course",
    "start": 657.92,
    "duration": 5.44
  },
  {
    "text": "we're going to fully learn what exactly",
    "start": 661.04,
    "duration": 5.039
  },
  {
    "text": "is a stream and how it works from top to",
    "start": 663.36,
    "duration": 5.44
  },
  {
    "text": "bottom so a stream is pretty much an",
    "start": 666.079,
    "duration": 4.081
  },
  {
    "text": "abstraction",
    "start": 668.8,
    "duration": 4.4
  },
  {
    "text": "and it focuses on the overall picture",
    "start": 670.16,
    "duration": 6.56
  },
  {
    "text": "instead of each individual part",
    "start": 673.2,
    "duration": 6.56
  },
  {
    "text": "so when you build an application",
    "start": 676.72,
    "duration": 4.32
  },
  {
    "text": "sometimes",
    "start": 679.76,
    "duration": 3.84
  },
  {
    "text": "you pretty much just write a bunch of",
    "start": 681.04,
    "duration": 7.12
  },
  {
    "text": "logic so if this do that if not do that",
    "start": 683.6,
    "duration": 6.56
  },
  {
    "text": "otherwise use a switch statement so on",
    "start": 688.16,
    "duration": 4.56
  },
  {
    "text": "and so forth create an empty list do",
    "start": 690.16,
    "duration": 4.08
  },
  {
    "text": "this do that right",
    "start": 692.72,
    "duration": 6.48
  },
  {
    "text": "so that is the individual pieces right",
    "start": 694.24,
    "duration": 6.08
  },
  {
    "text": "whereas",
    "start": 699.2,
    "duration": 2.0
  },
  {
    "text": "the",
    "start": 700.32,
    "duration": 4.4
  },
  {
    "text": "stream focuses on the overall picture",
    "start": 701.2,
    "duration": 5.04
  },
  {
    "text": "and instead of us defining the",
    "start": 704.72,
    "duration": 4.32
  },
  {
    "text": "implementation as a whole we pretty much",
    "start": 706.24,
    "duration": 5.36
  },
  {
    "text": "just tell it what we want so to",
    "start": 709.04,
    "duration": 4.32
  },
  {
    "text": "understand what i mean so have a look at",
    "start": 711.6,
    "duration": 3.44
  },
  {
    "text": "this piece of code and by the way don't",
    "start": 713.36,
    "duration": 3.039
  },
  {
    "text": "worry too much about this because we're",
    "start": 715.04,
    "duration": 4.0
  },
  {
    "text": "going to go over all of this in detail",
    "start": 716.399,
    "duration": 6.0
  },
  {
    "text": "but in here check this out so this is",
    "start": 719.04,
    "duration": 6.08
  },
  {
    "text": "imperative approach or the imperative",
    "start": 722.399,
    "duration": 5.201
  },
  {
    "text": "programming where we specify",
    "start": 725.12,
    "duration": 4.56
  },
  {
    "text": "every single implementation detail so",
    "start": 727.6,
    "duration": 4.4
  },
  {
    "text": "have a look we have a list another empty",
    "start": 729.68,
    "duration": 5.279
  },
  {
    "text": "list we have a limit we have the counter",
    "start": 732.0,
    "duration": 5.12
  },
  {
    "text": "we loop through the list we have an if",
    "start": 734.959,
    "duration": 4.721
  },
  {
    "text": "statement we add to the list",
    "start": 737.12,
    "duration": 4.8
  },
  {
    "text": "and then we increment the counter then",
    "start": 739.68,
    "duration": 4.8
  },
  {
    "text": "if we reach the limit we break",
    "start": 741.92,
    "duration": 6.0
  },
  {
    "text": "and then at the end we pretty much just",
    "start": 744.48,
    "duration": 5.599
  },
  {
    "text": "print out the contents but you can see",
    "start": 747.92,
    "duration": 4.08
  },
  {
    "text": "that this is a lot of code for something",
    "start": 750.079,
    "duration": 4.241
  },
  {
    "text": "very simple but this is because we are",
    "start": 752.0,
    "duration": 6.16
  },
  {
    "text": "focusing on the individual pieces right",
    "start": 754.32,
    "duration": 6.959
  },
  {
    "text": "so individual parts so we as a developer",
    "start": 758.16,
    "duration": 5.6
  },
  {
    "text": "we have to implement everything and this",
    "start": 761.279,
    "duration": 4.8
  },
  {
    "text": "sometimes can lead to a lot of errors",
    "start": 763.76,
    "duration": 5.92
  },
  {
    "text": "and bugs and instead with streams which",
    "start": 766.079,
    "duration": 6.161
  },
  {
    "text": "allows us to move from imperative to",
    "start": 769.68,
    "duration": 4.399
  },
  {
    "text": "declarative programming",
    "start": 772.24,
    "duration": 4.08
  },
  {
    "text": "we can rewrite the entire thing so have",
    "start": 774.079,
    "duration": 5.041
  },
  {
    "text": "a look so how many lines of code in here",
    "start": 776.32,
    "duration": 9.44
  },
  {
    "text": "1 2 3 4 5 6 7 8 9 10 11 12 13 14 14",
    "start": 779.12,
    "duration": 8.48
  },
  {
    "text": "lines or 20",
    "start": 785.76,
    "duration": 4.319
  },
  {
    "text": "all together right so we can replace all",
    "start": 787.6,
    "duration": 4.64
  },
  {
    "text": "of this with this",
    "start": 790.079,
    "duration": 4.081
  },
  {
    "text": "right here so have a look",
    "start": 792.24,
    "duration": 3.92
  },
  {
    "text": "just this and this is what you're going",
    "start": 794.16,
    "duration": 4.16
  },
  {
    "text": "to be learning in this course right so",
    "start": 796.16,
    "duration": 4.239
  },
  {
    "text": "have a look here we're not defining the",
    "start": 798.32,
    "duration": 4.0
  },
  {
    "text": "if we're not defining an empty list",
    "start": 800.399,
    "duration": 4.321
  },
  {
    "text": "we're not defining how to increment",
    "start": 802.32,
    "duration": 4.56
  },
  {
    "text": "how to stop so on and so forth you can",
    "start": 804.72,
    "duration": 5.28
  },
  {
    "text": "see that we have a list we invoke the",
    "start": 806.88,
    "duration": 5.92
  },
  {
    "text": "stream we filter we tell it how many we",
    "start": 810.0,
    "duration": 5.519
  },
  {
    "text": "want and then we collect back to a list",
    "start": 812.8,
    "duration": 5.039
  },
  {
    "text": "job done and don't you worry about this",
    "start": 815.519,
    "duration": 3.841
  },
  {
    "text": "if you don't understand but at the end",
    "start": 817.839,
    "duration": 3.281
  },
  {
    "text": "of this course you will know everything",
    "start": 819.36,
    "duration": 4.08
  },
  {
    "text": "there is to know about java streams",
    "start": 821.12,
    "duration": 3.839
  },
  {
    "text": "so if you've done my course on",
    "start": 823.44,
    "duration": 3.519
  },
  {
    "text": "functional programming then streams will",
    "start": 824.959,
    "duration": 4.32
  },
  {
    "text": "be very easy for you to understand",
    "start": 826.959,
    "duration": 4.641
  },
  {
    "text": "but basically we move away from",
    "start": 829.279,
    "duration": 4.0
  },
  {
    "text": "imperative to",
    "start": 831.6,
    "duration": 3.84
  },
  {
    "text": "functional programming so instead of us",
    "start": 833.279,
    "duration": 5.36
  },
  {
    "text": "defining every single implementation",
    "start": 835.44,
    "duration": 6.24
  },
  {
    "text": "detail we just tell it what we want",
    "start": 838.639,
    "duration": 6.161
  },
  {
    "text": "now streams are mainly used with",
    "start": 841.68,
    "duration": 5.599
  },
  {
    "text": "collections so if you know about lists",
    "start": 844.8,
    "duration": 4.96
  },
  {
    "text": "arrays sets",
    "start": 847.279,
    "duration": 5.441
  },
  {
    "text": "maps and all that good stuff then you",
    "start": 849.76,
    "duration": 6.0
  },
  {
    "text": "should be good in understanding streams",
    "start": 852.72,
    "duration": 5.84
  },
  {
    "text": "otherwise check my course on java where",
    "start": 855.76,
    "duration": 4.16
  },
  {
    "text": "i go over",
    "start": 858.56,
    "duration": 4.8
  },
  {
    "text": "the collections api",
    "start": 859.92,
    "duration": 3.44
  },
  {
    "text": "so you know what a stream is but how to",
    "start": 869.04,
    "duration": 5.039
  },
  {
    "text": "exactly use a stream so let me actually",
    "start": 871.6,
    "duration": 5.039
  },
  {
    "text": "help you to visualize and hopefully this",
    "start": 874.079,
    "duration": 4.0
  },
  {
    "text": "will make sense",
    "start": 876.639,
    "duration": 2.32
  },
  {
    "text": "so",
    "start": 878.079,
    "duration": 4.161
  },
  {
    "text": "to use a stream we need to start with a",
    "start": 878.959,
    "duration": 6.161
  },
  {
    "text": "collection so this could be arrays",
    "start": 882.24,
    "duration": 4.0
  },
  {
    "text": "sets",
    "start": 885.12,
    "duration": 2.159
  },
  {
    "text": "lists",
    "start": 886.24,
    "duration": 2.0
  },
  {
    "text": "maps",
    "start": 887.279,
    "duration": 3.761
  },
  {
    "text": "and other implementations",
    "start": 888.24,
    "duration": 6.48
  },
  {
    "text": "so now that you have your starting point",
    "start": 891.04,
    "duration": 6.32
  },
  {
    "text": "then what we do is from",
    "start": 894.72,
    "duration": 3.76
  },
  {
    "text": "the",
    "start": 897.36,
    "duration": 5.76
  },
  {
    "text": "list itself we invoke the stream method",
    "start": 898.48,
    "duration": 7.359
  },
  {
    "text": "now from this point onwards we can have",
    "start": 903.12,
    "duration": 5.519
  },
  {
    "text": "as many streams as we want so we can",
    "start": 905.839,
    "duration": 4.881
  },
  {
    "text": "have a stream 1",
    "start": 908.639,
    "duration": 3.121
  },
  {
    "text": "2",
    "start": 910.72,
    "duration": 3.84
  },
  {
    "text": "three so on and so forth",
    "start": 911.76,
    "duration": 6.0
  },
  {
    "text": "now these streams right here so this is",
    "start": 914.56,
    "duration": 6.079
  },
  {
    "text": "the abstraction phase so this is telling",
    "start": 917.76,
    "duration": 5.12
  },
  {
    "text": "what we want so this is the abstraction",
    "start": 920.639,
    "duration": 4.88
  },
  {
    "text": "phase right so instead of implementing",
    "start": 922.88,
    "duration": 5.199
  },
  {
    "text": "every single implementation detail we",
    "start": 925.519,
    "duration": 4.32
  },
  {
    "text": "just tell it what we want instead of",
    "start": 928.079,
    "duration": 4.401
  },
  {
    "text": "defining and controlling every single",
    "start": 929.839,
    "duration": 4.24
  },
  {
    "text": "aspect of",
    "start": 932.48,
    "duration": 3.84
  },
  {
    "text": "the logic itself",
    "start": 934.079,
    "duration": 5.2
  },
  {
    "text": "now the stream itself right here and in",
    "start": 936.32,
    "duration": 4.319
  },
  {
    "text": "this course you want to learn about",
    "start": 939.279,
    "duration": 3.761
  },
  {
    "text": "streams and all the methods available",
    "start": 940.639,
    "duration": 5.601
  },
  {
    "text": "but when you invoke the stream on a list",
    "start": 943.04,
    "duration": 6.08
  },
  {
    "text": "or a collection you can have methods",
    "start": 946.24,
    "duration": 5.599
  },
  {
    "text": "such as filter to filter down elements",
    "start": 949.12,
    "duration": 6.24
  },
  {
    "text": "you can map for transformations and also",
    "start": 951.839,
    "duration": 4.641
  },
  {
    "text": "reduce",
    "start": 955.36,
    "duration": 4.32
  },
  {
    "text": "so these three right here are three of",
    "start": 956.48,
    "duration": 5.52
  },
  {
    "text": "many methods available to us",
    "start": 959.68,
    "duration": 4.48
  },
  {
    "text": "and don't worry we're going to cover the",
    "start": 962.0,
    "duration": 6.759
  },
  {
    "text": "most important ones and by the end",
    "start": 964.16,
    "duration": 4.599
  },
  {
    "text": "now something to bear in mind you should",
    "start": 969.839,
    "duration": 3.761
  },
  {
    "text": "know exactly how to work with all of",
    "start": 971.6,
    "duration": 5.039
  },
  {
    "text": "filter map reduce so on and so forth and",
    "start": 973.6,
    "duration": 4.479
  },
  {
    "text": "everything",
    "start": 976.639,
    "duration": 4.481
  },
  {
    "text": "which you can invoke the stream upon",
    "start": 978.079,
    "duration": 5.281
  },
  {
    "text": "these are called the intermediate",
    "start": 981.12,
    "duration": 3.839
  },
  {
    "text": "operators",
    "start": 983.36,
    "duration": 4.24
  },
  {
    "text": "again keep this in mind so these are",
    "start": 984.959,
    "duration": 5.521
  },
  {
    "text": "intermediate operators",
    "start": 987.6,
    "duration": 3.919
  },
  {
    "text": "right",
    "start": 990.48,
    "duration": 4.4
  },
  {
    "text": "then once you are done with your streams",
    "start": 991.519,
    "duration": 6.161
  },
  {
    "text": "and you can have as many as you want",
    "start": 994.88,
    "duration": 5.36
  },
  {
    "text": "you then pretty much just say right so",
    "start": 997.68,
    "duration": 4.64
  },
  {
    "text": "now that i've got my stream",
    "start": 1000.24,
    "duration": 4.56
  },
  {
    "text": "i want to go back to a concrete",
    "start": 1002.32,
    "duration": 3.759
  },
  {
    "text": "implementation",
    "start": 1004.8,
    "duration": 4.32
  },
  {
    "text": "and this is going back for example to a",
    "start": 1006.079,
    "duration": 6.401
  },
  {
    "text": "list an integer an object an optional",
    "start": 1009.12,
    "duration": 7.44
  },
  {
    "text": "string and any other data type right",
    "start": 1012.48,
    "duration": 4.799
  },
  {
    "text": "so",
    "start": 1016.56,
    "duration": 1.76
  },
  {
    "text": "these",
    "start": 1017.279,
    "duration": 4.401
  },
  {
    "text": "are methods available such as sum",
    "start": 1018.32,
    "duration": 7.28
  },
  {
    "text": "collecting to a list performing average",
    "start": 1021.68,
    "duration": 5.2
  },
  {
    "text": "grouping by",
    "start": 1025.6,
    "duration": 2.959
  },
  {
    "text": "so on and so forth and you'll learn",
    "start": 1026.88,
    "duration": 4.079
  },
  {
    "text": "about all of this in this course",
    "start": 1028.559,
    "duration": 3.36
  },
  {
    "text": "now",
    "start": 1030.959,
    "duration": 3.681
  },
  {
    "text": "i said that the streams itself",
    "start": 1031.919,
    "duration": 6.481
  },
  {
    "text": "those are the intermediate operators",
    "start": 1034.64,
    "duration": 7.52
  },
  {
    "text": "and at the very end at the very end when",
    "start": 1038.4,
    "duration": 6.0
  },
  {
    "text": "you want to collect or you want to go",
    "start": 1042.16,
    "duration": 6.8
  },
  {
    "text": "back to a concrete class or type",
    "start": 1044.4,
    "duration": 6.08
  },
  {
    "text": "these are called",
    "start": 1048.96,
    "duration": 3.839
  },
  {
    "text": "terminal operators",
    "start": 1050.48,
    "duration": 4.319
  },
  {
    "text": "and terminal because",
    "start": 1052.799,
    "duration": 4.641
  },
  {
    "text": "they end the stream and then they give",
    "start": 1054.799,
    "duration": 5.601
  },
  {
    "text": "you back what you pretty much have",
    "start": 1057.44,
    "duration": 4.72
  },
  {
    "text": "requested from",
    "start": 1060.4,
    "duration": 4.159
  },
  {
    "text": "the sequence of streams",
    "start": 1062.16,
    "duration": 4.8
  },
  {
    "text": "and this is pretty much how they work as",
    "start": 1064.559,
    "duration": 4.161
  },
  {
    "text": "i said don't worry we're going to cover",
    "start": 1066.96,
    "duration": 3.68
  },
  {
    "text": "everything in detail and all the methods",
    "start": 1068.72,
    "duration": 4.24
  },
  {
    "text": "available but if you have any questions",
    "start": 1070.64,
    "duration": 4.48
  },
  {
    "text": "please do let me know otherwise let's",
    "start": 1072.96,
    "duration": 5.48
  },
  {
    "text": "carry on",
    "start": 1075.12,
    "duration": 3.32
  },
  {
    "text": "so within examples let me create a new",
    "start": 1083.12,
    "duration": 5.679
  },
  {
    "text": "file in here and what i'm going to do is",
    "start": 1085.679,
    "duration": 5.36
  },
  {
    "text": "i'm going to call this as",
    "start": 1088.799,
    "duration": 3.441
  },
  {
    "text": "working",
    "start": 1091.039,
    "duration": 4.721
  },
  {
    "text": "with and then streams",
    "start": 1092.24,
    "duration": 7.2
  },
  {
    "text": "so inside of this class in here",
    "start": 1095.76,
    "duration": 5.76
  },
  {
    "text": "let me show you how to work with streams",
    "start": 1099.44,
    "duration": 5.119
  },
  {
    "text": "so here let me just have a test so new",
    "start": 1101.52,
    "duration": 4.48
  },
  {
    "text": "test method",
    "start": 1104.559,
    "duration": 4.961
  },
  {
    "text": "and i'm going to say streams",
    "start": 1106.0,
    "duration": 6.559
  },
  {
    "text": "there we go and let me collapse this",
    "start": 1109.52,
    "duration": 3.84
  },
  {
    "text": "so",
    "start": 1112.559,
    "duration": 3.841
  },
  {
    "text": "to work with a stream is as follows so",
    "start": 1113.36,
    "duration": 5.679
  },
  {
    "text": "remember i said that we basically start",
    "start": 1116.4,
    "duration": 6.72
  },
  {
    "text": "with a list array set so on and so forth",
    "start": 1119.039,
    "duration": 7.201
  },
  {
    "text": "so let's have a list",
    "start": 1123.12,
    "duration": 6.64
  },
  {
    "text": "in here and this will be a list of",
    "start": 1126.24,
    "duration": 6.08
  },
  {
    "text": "strings",
    "start": 1129.76,
    "duration": 2.56
  },
  {
    "text": "just like that",
    "start": 1132.559,
    "duration": 5.201
  },
  {
    "text": "and let me just say names in here",
    "start": 1134.08,
    "duration": 7.68
  },
  {
    "text": "equals to list dot and then off",
    "start": 1137.76,
    "duration": 8.799
  },
  {
    "text": "and in here let me say amigos code",
    "start": 1141.76,
    "duration": 7.08
  },
  {
    "text": "and then",
    "start": 1146.559,
    "duration": 5.521
  },
  {
    "text": "alex and let's just say",
    "start": 1148.84,
    "duration": 5.719
  },
  {
    "text": "zara for example right",
    "start": 1152.08,
    "duration": 3.44
  },
  {
    "text": "so",
    "start": 1154.559,
    "duration": 2.961
  },
  {
    "text": "obviously this could be anything that",
    "start": 1155.52,
    "duration": 4.96
  },
  {
    "text": "you want but as i said when you want to",
    "start": 1157.52,
    "duration": 5.92
  },
  {
    "text": "work with streams you basically use a",
    "start": 1160.48,
    "duration": 4.079
  },
  {
    "text": "collection",
    "start": 1163.44,
    "duration": 3.359
  },
  {
    "text": "and then from it you can invoke the",
    "start": 1164.559,
    "duration": 4.801
  },
  {
    "text": "streams so here i can say names",
    "start": 1166.799,
    "duration": 4.801
  },
  {
    "text": "dot and then have a look",
    "start": 1169.36,
    "duration": 3.84
  },
  {
    "text": "stream",
    "start": 1171.6,
    "duration": 2.8
  },
  {
    "text": "there we go",
    "start": 1173.2,
    "duration": 2.16
  },
  {
    "text": "now",
    "start": 1174.4,
    "duration": 3.68
  },
  {
    "text": "this in itself so this in itself if i",
    "start": 1175.36,
    "duration": 4.72
  },
  {
    "text": "extract this to a variable",
    "start": 1178.08,
    "duration": 5.44
  },
  {
    "text": "have a look so that is a stream of",
    "start": 1180.08,
    "duration": 5.36
  },
  {
    "text": "strings",
    "start": 1183.52,
    "duration": 4.56
  },
  {
    "text": "so this is the exact same thing of view",
    "start": 1185.44,
    "duration": 4.64
  },
  {
    "text": "saying stream",
    "start": 1188.08,
    "duration": 4.479
  },
  {
    "text": "there we go and you can specify the data",
    "start": 1190.08,
    "duration": 3.52
  },
  {
    "text": "type",
    "start": 1192.559,
    "duration": 4.321
  },
  {
    "text": "and then i'm going to say names",
    "start": 1193.6,
    "duration": 7.199
  },
  {
    "text": "or basically names and then stream",
    "start": 1196.88,
    "duration": 6.799
  },
  {
    "text": "equals to and then stream",
    "start": 1200.799,
    "duration": 3.841
  },
  {
    "text": "dot",
    "start": 1203.679,
    "duration": 4.48
  },
  {
    "text": "and then we have have a look concat of",
    "start": 1204.64,
    "duration": 7.2
  },
  {
    "text": "of or empty generates on it so forth you",
    "start": 1208.159,
    "duration": 5.921
  },
  {
    "text": "can even use the builder but here i can",
    "start": 1211.84,
    "duration": 4.319
  },
  {
    "text": "say of and then values",
    "start": 1214.08,
    "duration": 4.16
  },
  {
    "text": "and i can give the exact same values in",
    "start": 1216.159,
    "duration": 3.041
  },
  {
    "text": "here",
    "start": 1218.24,
    "duration": 2.4
  },
  {
    "text": "right",
    "start": 1219.2,
    "duration": 5.04
  },
  {
    "text": "oops so basically just like that",
    "start": 1220.64,
    "duration": 4.399
  },
  {
    "text": "so",
    "start": 1224.24,
    "duration": 2.559
  },
  {
    "text": "this is the exact same thing but what",
    "start": 1225.039,
    "duration": 4.801
  },
  {
    "text": "i'm doing is from the list itself i'm",
    "start": 1226.799,
    "duration": 5.841
  },
  {
    "text": "pulling out the stream right here",
    "start": 1229.84,
    "duration": 4.88
  },
  {
    "text": "now from our stream",
    "start": 1232.64,
    "duration": 5.039
  },
  {
    "text": "remember i said we can have multiple of",
    "start": 1234.72,
    "duration": 4.959
  },
  {
    "text": "methods right so here",
    "start": 1237.679,
    "duration": 3.601
  },
  {
    "text": "i can say stream",
    "start": 1239.679,
    "duration": 2.88
  },
  {
    "text": "and then dot",
    "start": 1241.28,
    "duration": 3.759
  },
  {
    "text": "and now have a look i've got map filter",
    "start": 1242.559,
    "duration": 5.281
  },
  {
    "text": "collect limit sorted",
    "start": 1245.039,
    "duration": 4.721
  },
  {
    "text": "take while distinct on all of these",
    "start": 1247.84,
    "duration": 3.28
  },
  {
    "text": "methods right",
    "start": 1249.76,
    "duration": 3.44
  },
  {
    "text": "but what i want you to see is have a",
    "start": 1251.12,
    "duration": 5.6
  },
  {
    "text": "look distinct it gives you back a stream",
    "start": 1253.2,
    "duration": 7.04
  },
  {
    "text": "take while it gives you back a stream",
    "start": 1256.72,
    "duration": 6.319
  },
  {
    "text": "sorted gives back a stream",
    "start": 1260.24,
    "duration": 5.28
  },
  {
    "text": "limit gives you back a stream",
    "start": 1263.039,
    "duration": 5.441
  },
  {
    "text": "flat map a stream so and so forth so",
    "start": 1265.52,
    "duration": 5.76
  },
  {
    "text": "this means that in here you can actually",
    "start": 1268.48,
    "duration": 5.52
  },
  {
    "text": "so let me just say limit for example",
    "start": 1271.28,
    "duration": 4.16
  },
  {
    "text": "and then two",
    "start": 1274.0,
    "duration": 3.44
  },
  {
    "text": "i can then say dot",
    "start": 1275.44,
    "duration": 4.08
  },
  {
    "text": "and then basically i can concatenate",
    "start": 1277.44,
    "duration": 4.32
  },
  {
    "text": "these streams together right i can say",
    "start": 1279.52,
    "duration": 4.0
  },
  {
    "text": "map for example",
    "start": 1281.76,
    "duration": 3.12
  },
  {
    "text": "oops",
    "start": 1283.52,
    "duration": 5.32
  },
  {
    "text": "so map for example let me just say no in",
    "start": 1284.88,
    "duration": 7.52
  },
  {
    "text": "here if i can yes so that's not correct",
    "start": 1288.84,
    "duration": 5.24
  },
  {
    "text": "but all i'm showing is that i can say",
    "start": 1292.4,
    "duration": 2.88
  },
  {
    "text": "dot",
    "start": 1294.08,
    "duration": 2.959
  },
  {
    "text": "and then sorted",
    "start": 1295.28,
    "duration": 3.12
  },
  {
    "text": "no",
    "start": 1297.039,
    "duration": 2.961
  },
  {
    "text": "and you'll learn how to use all of these",
    "start": 1298.4,
    "duration": 3.279
  },
  {
    "text": "in a second but i'm just showing you so",
    "start": 1300.0,
    "duration": 2.96
  },
  {
    "text": "basically you see",
    "start": 1301.679,
    "duration": 3.841
  },
  {
    "text": "that i'm actually able to concatenate",
    "start": 1302.96,
    "duration": 5.28
  },
  {
    "text": "these streams together",
    "start": 1305.52,
    "duration": 4.639
  },
  {
    "text": "and once i'm done",
    "start": 1308.24,
    "duration": 4.48
  },
  {
    "text": "so here so this is the stream",
    "start": 1310.159,
    "duration": 4.161
  },
  {
    "text": "then we invoke",
    "start": 1312.72,
    "duration": 2.88
  },
  {
    "text": "so limit",
    "start": 1314.32,
    "duration": 3.599
  },
  {
    "text": "map so on and so forth and then at the",
    "start": 1315.6,
    "duration": 3.52
  },
  {
    "text": "end",
    "start": 1317.919,
    "duration": 4.481
  },
  {
    "text": "we say dot and then collect so these are",
    "start": 1319.12,
    "duration": 5.6
  },
  {
    "text": "the terminal operators so let me just",
    "start": 1322.4,
    "duration": 4.08
  },
  {
    "text": "say to list",
    "start": 1324.72,
    "duration": 4.64
  },
  {
    "text": "and right here so",
    "start": 1326.48,
    "duration": 5.12
  },
  {
    "text": "if i extract this to a variable have a",
    "start": 1329.36,
    "duration": 3.199
  },
  {
    "text": "look",
    "start": 1331.6,
    "duration": 3.84
  },
  {
    "text": "so we have from a stream",
    "start": 1332.559,
    "duration": 4.0
  },
  {
    "text": "we",
    "start": 1335.44,
    "duration": 3.44
  },
  {
    "text": "piped a bunch of streams together to",
    "start": 1336.559,
    "duration": 3.921
  },
  {
    "text": "tell you what we want",
    "start": 1338.88,
    "duration": 3.6
  },
  {
    "text": "and then we collect it back",
    "start": 1340.48,
    "duration": 5.84
  },
  {
    "text": "to a list of objects now this doesn't do",
    "start": 1342.48,
    "duration": 5.6
  },
  {
    "text": "anything i'm just showing you",
    "start": 1346.32,
    "duration": 3.52
  },
  {
    "text": "how it works but i'm going to give you",
    "start": 1348.08,
    "duration": 3.68
  },
  {
    "text": "real examples in a second",
    "start": 1349.84,
    "duration": 4.719
  },
  {
    "text": "all i want to say is that these are the",
    "start": 1351.76,
    "duration": 5.039
  },
  {
    "text": "intermediate operators",
    "start": 1354.559,
    "duration": 4.161
  },
  {
    "text": "and then once you are done",
    "start": 1356.799,
    "duration": 3.841
  },
  {
    "text": "you say collect",
    "start": 1358.72,
    "duration": 5.199
  },
  {
    "text": "and this is the terminal operator",
    "start": 1360.64,
    "duration": 4.08
  },
  {
    "text": "so",
    "start": 1363.919,
    "duration": 3.76
  },
  {
    "text": "i can even say for example so if i",
    "start": 1364.72,
    "duration": 5.68
  },
  {
    "text": "delete this",
    "start": 1367.679,
    "duration": 2.721
  },
  {
    "text": "so",
    "start": 1370.559,
    "duration": 2.721
  },
  {
    "text": "i can delete this and let's say for",
    "start": 1371.28,
    "duration": 3.6
  },
  {
    "text": "example count",
    "start": 1373.28,
    "duration": 4.639
  },
  {
    "text": "so count have a look count gives me a",
    "start": 1374.88,
    "duration": 5.52
  },
  {
    "text": "long and not a",
    "start": 1377.919,
    "duration": 4.64
  },
  {
    "text": "list back have a look",
    "start": 1380.4,
    "duration": 3.04
  },
  {
    "text": "right",
    "start": 1382.559,
    "duration": 5.12
  },
  {
    "text": "so count is also a terminal operator",
    "start": 1383.44,
    "duration": 5.92
  },
  {
    "text": "if you want to connect back to a set you",
    "start": 1387.679,
    "duration": 4.321
  },
  {
    "text": "can also do it to a map using grouping",
    "start": 1389.36,
    "duration": 4.48
  },
  {
    "text": "by but don't worry i'm going to teach",
    "start": 1392.0,
    "duration": 3.84
  },
  {
    "text": "you all of that in a second",
    "start": 1393.84,
    "duration": 3.839
  },
  {
    "text": "finally what i want to show you is in",
    "start": 1395.84,
    "duration": 3.839
  },
  {
    "text": "this course we're going to use both",
    "start": 1397.679,
    "duration": 3.681
  },
  {
    "text": "lists and arrays",
    "start": 1399.679,
    "duration": 4.48
  },
  {
    "text": "so if you have an array so here if i say",
    "start": 1401.36,
    "duration": 4.24
  },
  {
    "text": "string",
    "start": 1404.159,
    "duration": 2.88
  },
  {
    "text": "and then",
    "start": 1405.6,
    "duration": 2.72
  },
  {
    "text": "names",
    "start": 1407.039,
    "duration": 3.841
  },
  {
    "text": "and then array equals two",
    "start": 1408.32,
    "duration": 5.44
  },
  {
    "text": "and i'm missing curly brackets here so",
    "start": 1410.88,
    "duration": 6.08
  },
  {
    "text": "if i just have an empty array just for",
    "start": 1413.76,
    "duration": 7.36
  },
  {
    "text": "now so if i say names",
    "start": 1416.96,
    "duration": 5.199
  },
  {
    "text": "dot",
    "start": 1421.12,
    "duration": 2.159
  },
  {
    "text": "so here",
    "start": 1422.159,
    "duration": 3.361
  },
  {
    "text": "have a look i can say stream",
    "start": 1423.279,
    "duration": 4.801
  },
  {
    "text": "and what this does have a look so",
    "start": 1425.52,
    "duration": 4.96
  },
  {
    "text": "basically this was auto completion but",
    "start": 1428.08,
    "duration": 4.88
  },
  {
    "text": "basically i cannot invoke stream",
    "start": 1430.48,
    "duration": 5.52
  },
  {
    "text": "directly into this array i cannot say",
    "start": 1432.96,
    "duration": 5.12
  },
  {
    "text": "this so stream",
    "start": 1436.0,
    "duration": 3.76
  },
  {
    "text": "you can see that intellij is telling me",
    "start": 1438.08,
    "duration": 3.36
  },
  {
    "text": "what i need to do right",
    "start": 1439.76,
    "duration": 4.24
  },
  {
    "text": "so instead i need to say arrays dot",
    "start": 1441.44,
    "duration": 4.64
  },
  {
    "text": "stream and that will give me back a",
    "start": 1444.0,
    "duration": 3.039
  },
  {
    "text": "stream",
    "start": 1446.08,
    "duration": 2.24
  },
  {
    "text": "that i can then",
    "start": 1447.039,
    "duration": 3.52
  },
  {
    "text": "so here have a look i can say filter map",
    "start": 1448.32,
    "duration": 4.64
  },
  {
    "text": "collect so on and so forth",
    "start": 1450.559,
    "duration": 3.36
  },
  {
    "text": "right",
    "start": 1452.96,
    "duration": 1.68
  },
  {
    "text": "so",
    "start": 1453.919,
    "duration": 3.521
  },
  {
    "text": "this is pretty much how you get a stream",
    "start": 1454.64,
    "duration": 4.24
  },
  {
    "text": "from an array",
    "start": 1457.44,
    "duration": 3.44
  },
  {
    "text": "now this right here doesn't do anything",
    "start": 1458.88,
    "duration": 4.72
  },
  {
    "text": "as i said i'm just showing you how to",
    "start": 1460.88,
    "duration": 5.12
  },
  {
    "text": "get started with streams",
    "start": 1463.6,
    "duration": 3.76
  },
  {
    "text": "but in this course i'm going to give you",
    "start": 1466.0,
    "duration": 3.84
  },
  {
    "text": "real examples and by the end of it you",
    "start": 1467.36,
    "duration": 6.88
  },
  {
    "text": "will master the streams api",
    "start": 1469.84,
    "duration": 4.4
  },
  {
    "text": "let's begin this course with an exercise",
    "start": 1479.36,
    "duration": 7.36
  },
  {
    "text": "so open up the getting started class in",
    "start": 1482.96,
    "duration": 6.4
  },
  {
    "text": "here inside of tests and what i'm going",
    "start": 1486.72,
    "duration": 7.28
  },
  {
    "text": "to do is to complete this method in here",
    "start": 1489.36,
    "duration": 6.319
  },
  {
    "text": "so find",
    "start": 1494.0,
    "duration": 5.679
  },
  {
    "text": "people age less or equal to 18",
    "start": 1495.679,
    "duration": 6.161
  },
  {
    "text": "then change the implementation to find",
    "start": 1499.679,
    "duration": 5.36
  },
  {
    "text": "the first 10 right here",
    "start": 1501.84,
    "duration": 4.88
  },
  {
    "text": "so basically there's a bunch of people",
    "start": 1505.039,
    "duration": 4.161
  },
  {
    "text": "inside of this list",
    "start": 1506.72,
    "duration": 5.439
  },
  {
    "text": "so find the ones which are",
    "start": 1509.2,
    "duration": 6.479
  },
  {
    "text": "less or equal to 18 so the actual age",
    "start": 1512.159,
    "duration": 5.281
  },
  {
    "text": "and then change your implementation to",
    "start": 1515.679,
    "duration": 4.561
  },
  {
    "text": "only return the first 10 people",
    "start": 1517.44,
    "duration": 5.92
  },
  {
    "text": "so go ahead and give that a go and again",
    "start": 1520.24,
    "duration": 5.919
  },
  {
    "text": "here we're not learning about streams",
    "start": 1523.36,
    "duration": 4.72
  },
  {
    "text": "and this is me showing you the",
    "start": 1526.159,
    "duration": 4.88
  },
  {
    "text": "imperative approach which then will lead",
    "start": 1528.08,
    "duration": 6.079
  },
  {
    "text": "us to declarative approach using streams",
    "start": 1531.039,
    "duration": 4.88
  },
  {
    "text": "give that a go and i'm going to give you",
    "start": 1534.159,
    "duration": 6.041
  },
  {
    "text": "the solution in the next video",
    "start": 1535.919,
    "duration": 4.281
  },
  {
    "text": "all right let me give you the solution",
    "start": 1544.799,
    "duration": 5.841
  },
  {
    "text": "for the exercise in here what i did was",
    "start": 1546.559,
    "duration": 6.321
  },
  {
    "text": "i created one",
    "start": 1550.64,
    "duration": 5.12
  },
  {
    "text": "list right here called young people and",
    "start": 1552.88,
    "duration": 6.0
  },
  {
    "text": "initialized to an empty list",
    "start": 1555.76,
    "duration": 6.0
  },
  {
    "text": "then i do have two variables so one",
    "start": 1558.88,
    "duration": 4.96
  },
  {
    "text": "which is the limit",
    "start": 1561.76,
    "duration": 4.399
  },
  {
    "text": "right here which is 10",
    "start": 1563.84,
    "duration": 4.0
  },
  {
    "text": "and then the other one is the counter so",
    "start": 1566.159,
    "duration": 5.041
  },
  {
    "text": "this is so that i can only add",
    "start": 1567.84,
    "duration": 6.959
  },
  {
    "text": "10 people into this list right here and",
    "start": 1571.2,
    "duration": 5.68
  },
  {
    "text": "then what i have is the for loop for the",
    "start": 1574.799,
    "duration": 3.921
  },
  {
    "text": "initial list",
    "start": 1576.88,
    "duration": 4.64
  },
  {
    "text": "then i check whether the age is less or",
    "start": 1578.72,
    "duration": 4.48
  },
  {
    "text": "equal to 18",
    "start": 1581.52,
    "duration": 6.48
  },
  {
    "text": "if so i add the person to the new list",
    "start": 1583.2,
    "duration": 6.479
  },
  {
    "text": "called young people",
    "start": 1588.0,
    "duration": 4.48
  },
  {
    "text": "and then here i increment the counter",
    "start": 1589.679,
    "duration": 5.281
  },
  {
    "text": "and then i check if the counter is equal",
    "start": 1592.48,
    "duration": 5.439
  },
  {
    "text": "to the limit if so then i break out of",
    "start": 1594.96,
    "duration": 4.0
  },
  {
    "text": "the loop",
    "start": 1597.919,
    "duration": 5.76
  },
  {
    "text": "and finally in here so line 31 i do log",
    "start": 1598.96,
    "duration": 7.28
  },
  {
    "text": "or print out to the console",
    "start": 1603.679,
    "duration": 6.0
  },
  {
    "text": "the results so here if i run this test",
    "start": 1606.24,
    "duration": 5.439
  },
  {
    "text": "so run",
    "start": 1609.679,
    "duration": 4.561
  },
  {
    "text": "there we go you can see that so the",
    "start": 1611.679,
    "duration": 5.6
  },
  {
    "text": "output have a look so we have in here",
    "start": 1614.24,
    "duration": 5.36
  },
  {
    "text": "but if you look at the age in here",
    "start": 1617.279,
    "duration": 5.361
  },
  {
    "text": "you'll see that we only have a couple of",
    "start": 1619.6,
    "duration": 4.4
  },
  {
    "text": "people back",
    "start": 1622.64,
    "duration": 4.48
  },
  {
    "text": "and their age is either",
    "start": 1624.0,
    "duration": 6.08
  },
  {
    "text": "18 or less",
    "start": 1627.12,
    "duration": 4.08
  },
  {
    "text": "so",
    "start": 1630.08,
    "duration": 3.12
  },
  {
    "text": "there you have it so this you can see",
    "start": 1631.2,
    "duration": 5.12
  },
  {
    "text": "that it's a pretty lengthy solution so",
    "start": 1633.2,
    "duration": 8.719
  },
  {
    "text": "one two three four five six 7 8 9 10 11",
    "start": 1636.32,
    "duration": 9.12
  },
  {
    "text": "12 13 14 lines of code",
    "start": 1641.919,
    "duration": 6.161
  },
  {
    "text": "for something very simple and to be",
    "start": 1645.44,
    "duration": 4.8
  },
  {
    "text": "honest we can do something way better",
    "start": 1648.08,
    "duration": 5.199
  },
  {
    "text": "than this using the declarative approach",
    "start": 1650.24,
    "duration": 4.88
  },
  {
    "text": "with streams",
    "start": 1653.279,
    "duration": 5.041
  },
  {
    "text": "join me in the next video",
    "start": 1655.12,
    "duration": 3.2
  },
  {
    "text": "so within the same file getting started",
    "start": 1663.44,
    "duration": 6.719
  },
  {
    "text": "in here we do have this empty test and",
    "start": 1666.96,
    "duration": 5.839
  },
  {
    "text": "this is using declarative approach",
    "start": 1670.159,
    "duration": 4.321
  },
  {
    "text": "and streams",
    "start": 1672.799,
    "duration": 3.201
  },
  {
    "text": "so what we're going to do is we're going",
    "start": 1674.48,
    "duration": 4.0
  },
  {
    "text": "to implement the exact same problem that",
    "start": 1676.0,
    "duration": 5.2
  },
  {
    "text": "we have in here by using streams",
    "start": 1678.48,
    "duration": 3.919
  },
  {
    "text": "so in here",
    "start": 1681.2,
    "duration": 3.28
  },
  {
    "text": "remember i said that we start from a",
    "start": 1682.399,
    "duration": 6.081
  },
  {
    "text": "concrete class so our concrete class is",
    "start": 1684.48,
    "duration": 5.84
  },
  {
    "text": "people in here",
    "start": 1688.48,
    "duration": 3.76
  },
  {
    "text": "now what we need to do is from the",
    "start": 1690.32,
    "duration": 4.479
  },
  {
    "text": "concrete we go to",
    "start": 1692.24,
    "duration": 5.12
  },
  {
    "text": "the abstraction so here i'm going to say",
    "start": 1694.799,
    "duration": 3.841
  },
  {
    "text": "people",
    "start": 1697.36,
    "duration": 3.84
  },
  {
    "text": "dot and then stream",
    "start": 1698.64,
    "duration": 4.72
  },
  {
    "text": "from this point onwards i can have as",
    "start": 1701.2,
    "duration": 4.719
  },
  {
    "text": "many intermediate operators",
    "start": 1703.36,
    "duration": 5.36
  },
  {
    "text": "and then the final one which is to",
    "start": 1705.919,
    "duration": 4.561
  },
  {
    "text": "collect the results back",
    "start": 1708.72,
    "duration": 4.4
  },
  {
    "text": "is the terminal operator",
    "start": 1710.48,
    "duration": 4.72
  },
  {
    "text": "so the way that we can replace the above",
    "start": 1713.12,
    "duration": 3.84
  },
  {
    "text": "implementation which streams is as",
    "start": 1715.2,
    "duration": 3.199
  },
  {
    "text": "follows so here",
    "start": 1716.96,
    "duration": 2.4
  },
  {
    "text": "dot",
    "start": 1718.399,
    "duration": 2.321
  },
  {
    "text": "and then in here you can see that we",
    "start": 1719.36,
    "duration": 2.88
  },
  {
    "text": "have a bunch of methods that we're going",
    "start": 1720.72,
    "duration": 3.679
  },
  {
    "text": "to learn throughout this course and the",
    "start": 1722.24,
    "duration": 3.84
  },
  {
    "text": "one that i want is",
    "start": 1724.399,
    "duration": 3.441
  },
  {
    "text": "filter",
    "start": 1726.08,
    "duration": 4.0
  },
  {
    "text": "and inside this takes a predicate so the",
    "start": 1727.84,
    "duration": 4.88
  },
  {
    "text": "predicate receives the person so i'm",
    "start": 1730.08,
    "duration": 5.04
  },
  {
    "text": "going to say p for person",
    "start": 1732.72,
    "duration": 6.079
  },
  {
    "text": "and then it returns a lambda and here",
    "start": 1735.12,
    "duration": 4.64
  },
  {
    "text": "this",
    "start": 1738.799,
    "duration": 3.12
  },
  {
    "text": "oh actually it takes a lambda and the",
    "start": 1739.76,
    "duration": 4.399
  },
  {
    "text": "result has to be a boolean because it's",
    "start": 1741.919,
    "duration": 3.441
  },
  {
    "text": "a predicate",
    "start": 1744.159,
    "duration": 3.12
  },
  {
    "text": "now here i'm going to say",
    "start": 1745.36,
    "duration": 3.439
  },
  {
    "text": "p",
    "start": 1747.279,
    "duration": 5.52
  },
  {
    "text": "dot and then get and then h",
    "start": 1748.799,
    "duration": 8.561
  },
  {
    "text": "is less or equal to 18",
    "start": 1752.799,
    "duration": 5.76
  },
  {
    "text": "right here",
    "start": 1757.36,
    "duration": 3.52
  },
  {
    "text": "and then what i also want to do is say",
    "start": 1758.559,
    "duration": 5.441
  },
  {
    "text": "dot and then limit",
    "start": 1760.88,
    "duration": 4.56
  },
  {
    "text": "to 10",
    "start": 1764.0,
    "duration": 5.36
  },
  {
    "text": "and finally my terminal operator is dot",
    "start": 1765.44,
    "duration": 5.2
  },
  {
    "text": "collect",
    "start": 1769.36,
    "duration": 2.72
  },
  {
    "text": "and then",
    "start": 1770.64,
    "duration": 3.759
  },
  {
    "text": "to list right here",
    "start": 1772.08,
    "duration": 4.4
  },
  {
    "text": "and to be honest this is it",
    "start": 1774.399,
    "duration": 4.481
  },
  {
    "text": "so now let me actually put this on a new",
    "start": 1776.48,
    "duration": 4.64
  },
  {
    "text": "line so you can see everything properly",
    "start": 1778.88,
    "duration": 5.44
  },
  {
    "text": "new line here the same here and then let",
    "start": 1781.12,
    "duration": 5.76
  },
  {
    "text": "me extract this to a variable",
    "start": 1784.32,
    "duration": 3.28
  },
  {
    "text": "so",
    "start": 1786.88,
    "duration": 3.039
  },
  {
    "text": "now i'm going to call this as young",
    "start": 1787.6,
    "duration": 4.72
  },
  {
    "text": "and then people",
    "start": 1789.919,
    "duration": 5.921
  },
  {
    "text": "same as before and finally we can have",
    "start": 1792.32,
    "duration": 6.479
  },
  {
    "text": "the exact same loop so here let me just",
    "start": 1795.84,
    "duration": 4.48
  },
  {
    "text": "space that",
    "start": 1798.799,
    "duration": 3.36
  },
  {
    "text": "and there we go",
    "start": 1800.32,
    "duration": 3.599
  },
  {
    "text": "so don't worry if you don't understand",
    "start": 1802.159,
    "duration": 4.0
  },
  {
    "text": "this but basically what we're doing is",
    "start": 1803.919,
    "duration": 4.801
  },
  {
    "text": "from the concrete class in here which is",
    "start": 1806.159,
    "duration": 4.0
  },
  {
    "text": "a list",
    "start": 1808.72,
    "duration": 3.92
  },
  {
    "text": "so this is our starting point",
    "start": 1810.159,
    "duration": 3.281
  },
  {
    "text": "we",
    "start": 1812.64,
    "duration": 3.6
  },
  {
    "text": "go from the starting point",
    "start": 1813.44,
    "duration": 4.88
  },
  {
    "text": "to this abstraction",
    "start": 1816.24,
    "duration": 4.159
  },
  {
    "text": "which is using stream",
    "start": 1818.32,
    "duration": 4.8
  },
  {
    "text": "then we have two intermediate operations",
    "start": 1820.399,
    "duration": 5.841
  },
  {
    "text": "in here so filter and limit",
    "start": 1823.12,
    "duration": 5.76
  },
  {
    "text": "and then finally we collect back the",
    "start": 1826.24,
    "duration": 3.84
  },
  {
    "text": "results",
    "start": 1828.88,
    "duration": 3.84
  },
  {
    "text": "to a type that we can then use which is",
    "start": 1830.08,
    "duration": 5.44
  },
  {
    "text": "a list of people so this is the result",
    "start": 1832.72,
    "duration": 5.28
  },
  {
    "text": "and then finally we print out the result",
    "start": 1835.52,
    "duration": 4.48
  },
  {
    "text": "so if i run this",
    "start": 1838.0,
    "duration": 4.399
  },
  {
    "text": "this will give me the exact same result",
    "start": 1840.0,
    "duration": 4.24
  },
  {
    "text": "there we go you can see that we have the",
    "start": 1842.399,
    "duration": 4.481
  },
  {
    "text": "exact same result in here",
    "start": 1844.24,
    "duration": 4.64
  },
  {
    "text": "and if i close this",
    "start": 1846.88,
    "duration": 3.84
  },
  {
    "text": "you can see that the implementation in",
    "start": 1848.88,
    "duration": 4.0
  },
  {
    "text": "here it's much more elegant",
    "start": 1850.72,
    "duration": 4.319
  },
  {
    "text": "than doing all of this logic so you can",
    "start": 1852.88,
    "duration": 5.44
  },
  {
    "text": "see that here we have to define",
    "start": 1855.039,
    "duration": 5.36
  },
  {
    "text": "you know an extra list",
    "start": 1858.32,
    "duration": 3.12
  },
  {
    "text": "and then",
    "start": 1860.399,
    "duration": 2.561
  },
  {
    "text": "two variables",
    "start": 1861.44,
    "duration": 4.16
  },
  {
    "text": "and then a for loop within a for loop",
    "start": 1862.96,
    "duration": 4.319
  },
  {
    "text": "and if statement",
    "start": 1865.6,
    "duration": 4.72
  },
  {
    "text": "increment the counter adding to the list",
    "start": 1867.279,
    "duration": 4.64
  },
  {
    "text": "checking whether the counter equals to",
    "start": 1870.32,
    "duration": 3.76
  },
  {
    "text": "the limit and then breaks you can see",
    "start": 1871.919,
    "duration": 4.48
  },
  {
    "text": "how we have to deal with every single",
    "start": 1874.08,
    "duration": 5.52
  },
  {
    "text": "part right here so you can see we have",
    "start": 1876.399,
    "duration": 5.76
  },
  {
    "text": "to define every single implementation",
    "start": 1879.6,
    "duration": 5.679
  },
  {
    "text": "detail whereas with streams in here so",
    "start": 1882.159,
    "duration": 5.281
  },
  {
    "text": "the declarative approach we just tell it",
    "start": 1885.279,
    "duration": 4.801
  },
  {
    "text": "what we want instead of defining every",
    "start": 1887.44,
    "duration": 5.92
  },
  {
    "text": "single step and moving parts for what we",
    "start": 1890.08,
    "duration": 4.24
  },
  {
    "text": "want",
    "start": 1893.36,
    "duration": 4.72
  },
  {
    "text": "and this is streams in a nutshell",
    "start": 1894.32,
    "duration": 5.839
  },
  {
    "text": "don't worry too much about filter limit",
    "start": 1898.08,
    "duration": 3.76
  },
  {
    "text": "collect because we're going to learn all",
    "start": 1900.159,
    "duration": 3.921
  },
  {
    "text": "of this in this course but you can see",
    "start": 1901.84,
    "duration": 4.959
  },
  {
    "text": "the power of java streams if you have",
    "start": 1904.08,
    "duration": 4.64
  },
  {
    "text": "any questions please do let me know",
    "start": 1906.799,
    "duration": 5.6
  },
  {
    "text": "otherwise catch me on the next one",
    "start": 1908.72,
    "duration": 3.679
  },
  {
    "text": "so you saw how of approach is much",
    "start": 1917.76,
    "duration": 6.159
  },
  {
    "text": "easier and intuitive to write and it",
    "start": 1920.88,
    "duration": 6.0
  },
  {
    "text": "simplifies a lot of things and removes",
    "start": 1923.919,
    "duration": 6.24
  },
  {
    "text": "all of the moving parts that we have to",
    "start": 1926.88,
    "duration": 5.44
  },
  {
    "text": "implement ourselves now what i want to",
    "start": 1930.159,
    "duration": 5.52
  },
  {
    "text": "show you is how to visualize what is",
    "start": 1932.32,
    "duration": 5.92
  },
  {
    "text": "happening with streams so basically you",
    "start": 1935.679,
    "duration": 4.321
  },
  {
    "text": "saw that we have filter",
    "start": 1938.24,
    "duration": 2.799
  },
  {
    "text": "limit",
    "start": 1940.0,
    "duration": 3.679
  },
  {
    "text": "and then collectors right here",
    "start": 1941.039,
    "duration": 5.201
  },
  {
    "text": "so what i want to show you is there's a",
    "start": 1943.679,
    "duration": 5.36
  },
  {
    "text": "nice feature within intellij",
    "start": 1946.24,
    "duration": 7.12
  },
  {
    "text": "and that is if i stick a break point in",
    "start": 1949.039,
    "duration": 5.52
  },
  {
    "text": "here",
    "start": 1953.36,
    "duration": 3.439
  },
  {
    "text": "and then right click",
    "start": 1954.559,
    "duration": 5.281
  },
  {
    "text": "and then debug",
    "start": 1956.799,
    "duration": 4.561
  },
  {
    "text": "so let's",
    "start": 1959.84,
    "duration": 3.199
  },
  {
    "text": "run this together",
    "start": 1961.36,
    "duration": 4.88
  },
  {
    "text": "and have a look so it just stopped in",
    "start": 1963.039,
    "duration": 4.321
  },
  {
    "text": "here",
    "start": 1966.24,
    "duration": 2.24
  },
  {
    "text": "right",
    "start": 1967.36,
    "duration": 2.08
  },
  {
    "text": "and",
    "start": 1968.48,
    "duration": 3.919
  },
  {
    "text": "if i put this full screen",
    "start": 1969.44,
    "duration": 5.92
  },
  {
    "text": "have a look we have this button right",
    "start": 1972.399,
    "duration": 6.961
  },
  {
    "text": "here and trace current stream chain so",
    "start": 1975.36,
    "duration": 6.159
  },
  {
    "text": "i'm going to click on that",
    "start": 1979.36,
    "duration": 4.4
  },
  {
    "text": "now or in fact i don't even need to put",
    "start": 1981.519,
    "duration": 4.561
  },
  {
    "text": "this full screen but have a look",
    "start": 1983.76,
    "duration": 4.88
  },
  {
    "text": "so i can hide that for now",
    "start": 1986.08,
    "duration": 3.36
  },
  {
    "text": "and",
    "start": 1988.64,
    "duration": 4.32
  },
  {
    "text": "maybe put this bigger and there we go so",
    "start": 1989.44,
    "duration": 5.92
  },
  {
    "text": "have a look what is happening in here so",
    "start": 1992.96,
    "duration": 5.36
  },
  {
    "text": "we have people.stream",
    "start": 1995.36,
    "duration": 6.559
  },
  {
    "text": "then we filter so if i click on filter",
    "start": 1998.32,
    "duration": 5.76
  },
  {
    "text": "have a look this is actually showing me",
    "start": 2001.919,
    "duration": 3.841
  },
  {
    "text": "what is happening",
    "start": 2004.08,
    "duration": 3.52
  },
  {
    "text": "which is kind of cool right",
    "start": 2005.76,
    "duration": 3.6
  },
  {
    "text": "so basically",
    "start": 2007.6,
    "duration": 3.76
  },
  {
    "text": "it filtered",
    "start": 2009.36,
    "duration": 5.039
  },
  {
    "text": "so all of these people",
    "start": 2011.36,
    "duration": 4.319
  },
  {
    "text": "right here",
    "start": 2014.399,
    "duration": 5.921
  },
  {
    "text": "and then we have 10 because of limit",
    "start": 2015.679,
    "duration": 7.36
  },
  {
    "text": "have a look so we limit into 10 people",
    "start": 2020.32,
    "duration": 4.56
  },
  {
    "text": "and then we say collect",
    "start": 2023.039,
    "duration": 4.801
  },
  {
    "text": "and then we have an array list of 10",
    "start": 2024.88,
    "duration": 4.639
  },
  {
    "text": "elements",
    "start": 2027.84,
    "duration": 4.24
  },
  {
    "text": "so this is really cool so if i click on",
    "start": 2029.519,
    "duration": 4.0
  },
  {
    "text": "flat mode",
    "start": 2032.08,
    "duration": 3.28
  },
  {
    "text": "you can see that this is actually giving",
    "start": 2033.519,
    "duration": 6.321
  },
  {
    "text": "me the entire flow so we have the data",
    "start": 2035.36,
    "duration": 6.0
  },
  {
    "text": "we filter",
    "start": 2039.84,
    "duration": 4.559
  },
  {
    "text": "right here and then we limit into 10",
    "start": 2041.36,
    "duration": 6.159
  },
  {
    "text": "people and then we collect down",
    "start": 2044.399,
    "duration": 4.96
  },
  {
    "text": "this is all for now catch me on the next",
    "start": 2047.519,
    "duration": 4.08
  },
  {
    "text": "one",
    "start": 2049.359,
    "duration": 2.24
  },
  {
    "text": "all right so in this section let's learn",
    "start": 2057.599,
    "duration": 5.76
  },
  {
    "text": "how to filter data with streams",
    "start": 2060.0,
    "duration": 6.639
  },
  {
    "text": "so open up the filter class and inside",
    "start": 2063.359,
    "duration": 6.401
  },
  {
    "text": "we have this very first test called",
    "start": 2066.639,
    "duration": 4.24
  },
  {
    "text": "filter",
    "start": 2069.76,
    "duration": 3.599
  },
  {
    "text": "and what i want to do is i want to",
    "start": 2070.879,
    "duration": 5.04
  },
  {
    "text": "search for all the cars which have the",
    "start": 2073.359,
    "duration": 5.601
  },
  {
    "text": "price less than 2 000",
    "start": 2075.919,
    "duration": 5.521
  },
  {
    "text": "now the way to do this with streams is",
    "start": 2078.96,
    "duration": 5.84
  },
  {
    "text": "as follows we say cars dot and then",
    "start": 2081.44,
    "duration": 4.719
  },
  {
    "text": "stream",
    "start": 2084.8,
    "duration": 4.24
  },
  {
    "text": "and then say dot and then filter now",
    "start": 2086.159,
    "duration": 5.841
  },
  {
    "text": "filter takes a predicate and you can see",
    "start": 2089.04,
    "duration": 6.16
  },
  {
    "text": "that it has the weight symbol so",
    "start": 2092.0,
    "duration": 5.599
  },
  {
    "text": "question mark super and then car",
    "start": 2095.2,
    "duration": 4.08
  },
  {
    "text": "so if you want to learn more about",
    "start": 2097.599,
    "duration": 3.361
  },
  {
    "text": "generics go and check my course on",
    "start": 2099.28,
    "duration": 3.92
  },
  {
    "text": "generics where i teach all of this",
    "start": 2100.96,
    "duration": 4.32
  },
  {
    "text": "and also on functional programming i",
    "start": 2103.2,
    "duration": 5.04
  },
  {
    "text": "teach predicates consumers buy consumers",
    "start": 2105.28,
    "duration": 4.64
  },
  {
    "text": "and all of that good stuff",
    "start": 2108.24,
    "duration": 3.68
  },
  {
    "text": "so in here what i want to do is i want",
    "start": 2109.92,
    "duration": 3.679
  },
  {
    "text": "to say car",
    "start": 2111.92,
    "duration": 5.28
  },
  {
    "text": "and inside here this right here is a",
    "start": 2113.599,
    "duration": 5.921
  },
  {
    "text": "predicate and it has to return true or",
    "start": 2117.2,
    "duration": 3.28
  },
  {
    "text": "false",
    "start": 2119.52,
    "duration": 3.52
  },
  {
    "text": "now i want the car price",
    "start": 2120.48,
    "duration": 4.639
  },
  {
    "text": "so car dot and then",
    "start": 2123.04,
    "duration": 3.68
  },
  {
    "text": "get price",
    "start": 2125.119,
    "duration": 3.361
  },
  {
    "text": "to be less",
    "start": 2126.72,
    "duration": 5.04
  },
  {
    "text": "than 20 and then thousands so 20",
    "start": 2128.48,
    "duration": 4.8
  },
  {
    "text": "underscore",
    "start": 2131.76,
    "duration": 3.52
  },
  {
    "text": "and then three zero so this makes it",
    "start": 2133.28,
    "duration": 3.839
  },
  {
    "text": "easy to read",
    "start": 2135.28,
    "duration": 4.559
  },
  {
    "text": "dot and then zero zero so there you have",
    "start": 2137.119,
    "duration": 3.361
  },
  {
    "text": "it",
    "start": 2139.839,
    "duration": 3.441
  },
  {
    "text": "now obviously we need to collect this to",
    "start": 2140.48,
    "duration": 5.28
  },
  {
    "text": "a list so let's just collect this to a",
    "start": 2143.28,
    "duration": 3.76
  },
  {
    "text": "list",
    "start": 2145.76,
    "duration": 2.64
  },
  {
    "text": "and there we go",
    "start": 2147.04,
    "duration": 3.6
  },
  {
    "text": "so if i put this on a new line",
    "start": 2148.4,
    "duration": 4.8
  },
  {
    "text": "just like this and this is easy to read",
    "start": 2150.64,
    "duration": 4.08
  },
  {
    "text": "now i'm going to extract this to a",
    "start": 2153.2,
    "duration": 3.639
  },
  {
    "text": "variable and then i'm going to say",
    "start": 2154.72,
    "duration": 5.28
  },
  {
    "text": "cars less",
    "start": 2156.839,
    "duration": 5.481
  },
  {
    "text": "than",
    "start": 2160.0,
    "duration": 2.32
  },
  {
    "text": "20k there we go",
    "start": 2162.8,
    "duration": 3.52
  },
  {
    "text": "and",
    "start": 2165.119,
    "duration": 3.761
  },
  {
    "text": "to be honest this is it so obviously let",
    "start": 2166.32,
    "duration": 4.799
  },
  {
    "text": "me just print out to the console the",
    "start": 2168.88,
    "duration": 4.0
  },
  {
    "text": "list of cars so here i'm going to say",
    "start": 2171.119,
    "duration": 6.48
  },
  {
    "text": "cars less than 20k dot and then for each",
    "start": 2172.88,
    "duration": 7.199
  },
  {
    "text": "and then system.out.printline",
    "start": 2177.599,
    "duration": 5.041
  },
  {
    "text": "just like that so if i put this with",
    "start": 2180.079,
    "duration": 5.201
  },
  {
    "text": "spaces so it's easy to read",
    "start": 2182.64,
    "duration": 6.4
  },
  {
    "text": "and let's just run this for a second",
    "start": 2185.28,
    "duration": 3.76
  },
  {
    "text": "there we go so you can see that we have",
    "start": 2189.44,
    "duration": 2.72
  },
  {
    "text": "a bunch of cars",
    "start": 2190.8,
    "duration": 3.44
  },
  {
    "text": "but what i want to show you here is have",
    "start": 2192.16,
    "duration": 4.72
  },
  {
    "text": "a look at the prices so you will not see",
    "start": 2194.24,
    "duration": 3.599
  },
  {
    "text": "a car",
    "start": 2196.88,
    "duration": 4.64
  },
  {
    "text": "which has a price bigger than 20k have a",
    "start": 2197.839,
    "duration": 6.24
  },
  {
    "text": "look so there's a bunch of cars here and",
    "start": 2201.52,
    "duration": 4.0
  },
  {
    "text": "they're all",
    "start": 2204.079,
    "duration": 4.721
  },
  {
    "text": "under 20 000. so if you want to get the",
    "start": 2205.52,
    "duration": 6.559
  },
  {
    "text": "ones above 20 000 you just flip this",
    "start": 2208.8,
    "duration": 5.279
  },
  {
    "text": "sign so you just say greater and also",
    "start": 2212.079,
    "duration": 3.921
  },
  {
    "text": "you need to change the variable but here",
    "start": 2214.079,
    "duration": 3.921
  },
  {
    "text": "if i run this",
    "start": 2216.0,
    "duration": 4.4
  },
  {
    "text": "you'll see that the cars now",
    "start": 2218.0,
    "duration": 4.48
  },
  {
    "text": "will have a higher price so have a look",
    "start": 2220.4,
    "duration": 7.12
  },
  {
    "text": "23 66 000 34 000 so on and so forth",
    "start": 2222.48,
    "duration": 8.16
  },
  {
    "text": "so this is the general gist and with",
    "start": 2227.52,
    "duration": 5.68
  },
  {
    "text": "filter you can have as many filters that",
    "start": 2230.64,
    "duration": 4.719
  },
  {
    "text": "you want right so here let me just put",
    "start": 2233.2,
    "duration": 4.08
  },
  {
    "text": "this like this so if i wanted for",
    "start": 2235.359,
    "duration": 5.121
  },
  {
    "text": "example to say dot and then filter",
    "start": 2237.28,
    "duration": 6.24
  },
  {
    "text": "i can also say car",
    "start": 2240.48,
    "duration": 6.32
  },
  {
    "text": "and then car dot and then get color for",
    "start": 2243.52,
    "duration": 6.0
  },
  {
    "text": "example so let's just say that",
    "start": 2246.8,
    "duration": 6.0
  },
  {
    "text": "uh we want all the yellow cars so here",
    "start": 2249.52,
    "duration": 5.839
  },
  {
    "text": "if i basically say dot",
    "start": 2252.8,
    "duration": 6.799
  },
  {
    "text": "and then equals and then yellow",
    "start": 2255.359,
    "duration": 6.881
  },
  {
    "text": "and then i run this so hopefully we have",
    "start": 2259.599,
    "duration": 5.361
  },
  {
    "text": "a yellow card under 20 000 in here so",
    "start": 2262.24,
    "duration": 5.119
  },
  {
    "text": "run it",
    "start": 2264.96,
    "duration": 2.399
  },
  {
    "text": "and indeed we do have so you can see",
    "start": 2268.16,
    "duration": 3.84
  },
  {
    "text": "they are all yellow so yellow yellow",
    "start": 2270.16,
    "duration": 4.32
  },
  {
    "text": "yellow yellow and the prices are less",
    "start": 2272.0,
    "duration": 4.24
  },
  {
    "text": "than 20k",
    "start": 2274.48,
    "duration": 4.16
  },
  {
    "text": "so you can see how you can use filter to",
    "start": 2276.24,
    "duration": 5.359
  },
  {
    "text": "filter down data so it's really powerful",
    "start": 2278.64,
    "duration": 5.52
  },
  {
    "text": "and one that you should use quite low",
    "start": 2281.599,
    "duration": 5.76
  },
  {
    "text": "so in here just to mention so here this",
    "start": 2284.16,
    "duration": 5.04
  },
  {
    "text": "is a predicate so if i extract this way",
    "start": 2287.359,
    "duration": 2.961
  },
  {
    "text": "variable",
    "start": 2289.2,
    "duration": 2.56
  },
  {
    "text": "have a look",
    "start": 2290.32,
    "duration": 4.48
  },
  {
    "text": "so that's the predicate the same here if",
    "start": 2291.76,
    "duration": 4.8
  },
  {
    "text": "i shrink this to a variable",
    "start": 2294.8,
    "duration": 4.64
  },
  {
    "text": "that's another predicate",
    "start": 2296.56,
    "duration": 5.12
  },
  {
    "text": "so you can see that this is a predicate",
    "start": 2299.44,
    "duration": 4.72
  },
  {
    "text": "and the filter receives a predicate",
    "start": 2301.68,
    "duration": 3.919
  },
  {
    "text": "again if you're not sure about",
    "start": 2304.16,
    "duration": 3.52
  },
  {
    "text": "predicates go and check my course on",
    "start": 2305.599,
    "duration": 4.561
  },
  {
    "text": "functional programming with java where i",
    "start": 2307.68,
    "duration": 4.88
  },
  {
    "text": "teach all of this if you have any",
    "start": 2310.16,
    "duration": 4.24
  },
  {
    "text": "questions please do let me know",
    "start": 2312.56,
    "duration": 5.36
  },
  {
    "text": "otherwise let's move on",
    "start": 2314.4,
    "duration": 3.52
  },
  {
    "text": "so in this section let's focus on",
    "start": 2323.839,
    "duration": 3.361
  },
  {
    "text": "understanding how to perform",
    "start": 2325.839,
    "duration": 2.721
  },
  {
    "text": "transformations",
    "start": 2327.2,
    "duration": 2.399
  },
  {
    "text": "with",
    "start": 2328.56,
    "duration": 4.0
  },
  {
    "text": "streams and more specifically map",
    "start": 2329.599,
    "duration": 5.681
  },
  {
    "text": "flat map as well as reduce",
    "start": 2332.56,
    "duration": 5.6
  },
  {
    "text": "so open up the transformations map and",
    "start": 2335.28,
    "duration": 6.799
  },
  {
    "text": "reduce class and in here we have this",
    "start": 2338.16,
    "duration": 6.24
  },
  {
    "text": "very first test your first",
    "start": 2342.079,
    "duration": 5.04
  },
  {
    "text": "transformation with map and here we have",
    "start": 2344.4,
    "duration": 5.28
  },
  {
    "text": "a list and this should be people instead",
    "start": 2347.119,
    "duration": 3.841
  },
  {
    "text": "of cars",
    "start": 2349.68,
    "duration": 4.8
  },
  {
    "text": "so you'll see this line right here and",
    "start": 2350.96,
    "duration": 6.879
  },
  {
    "text": "what we want to do is to transform",
    "start": 2354.48,
    "duration": 7.2
  },
  {
    "text": "this list right here into a list of a",
    "start": 2357.839,
    "duration": 6.561
  },
  {
    "text": "different data type so this is what the",
    "start": 2361.68,
    "duration": 5.04
  },
  {
    "text": "map allows us to do it allows us to",
    "start": 2364.4,
    "duration": 5.679
  },
  {
    "text": "transform from one data type to another",
    "start": 2366.72,
    "duration": 6.24
  },
  {
    "text": "so in the project here",
    "start": 2370.079,
    "duration": 4.961
  },
  {
    "text": "inside of beans",
    "start": 2372.96,
    "duration": 5.04
  },
  {
    "text": "there is this class called person dto",
    "start": 2375.04,
    "duration": 4.079
  },
  {
    "text": "right here",
    "start": 2378.0,
    "duration": 4.56
  },
  {
    "text": "and have a look we have one method same",
    "start": 2379.119,
    "duration": 6.24
  },
  {
    "text": "map in here so what we want to do is we",
    "start": 2382.56,
    "duration": 5.84
  },
  {
    "text": "want to take a person and transform it",
    "start": 2385.359,
    "duration": 5.521
  },
  {
    "text": "into the person dto",
    "start": 2388.4,
    "duration": 5.28
  },
  {
    "text": "so we want to loop through that list",
    "start": 2390.88,
    "duration": 6.8
  },
  {
    "text": "and then transform it to the dto the way",
    "start": 2393.68,
    "duration": 6.399
  },
  {
    "text": "to do it is as follows",
    "start": 2397.68,
    "duration": 3.12
  },
  {
    "text": "so",
    "start": 2400.079,
    "duration": 3.52
  },
  {
    "text": "as always you know how to use streams so",
    "start": 2400.8,
    "duration": 3.84
  },
  {
    "text": "people",
    "start": 2403.599,
    "duration": 3.201
  },
  {
    "text": "dot n stream",
    "start": 2404.64,
    "duration": 5.199
  },
  {
    "text": "now here we can perform lots of",
    "start": 2406.8,
    "duration": 5.44
  },
  {
    "text": "intermediate operations but what i",
    "start": 2409.839,
    "duration": 4.24
  },
  {
    "text": "really want is to say",
    "start": 2412.24,
    "duration": 2.8
  },
  {
    "text": "dot",
    "start": 2414.079,
    "duration": 2.961
  },
  {
    "text": "and then map so this is the function",
    "start": 2415.04,
    "duration": 4.16
  },
  {
    "text": "that i'm actually teaching you",
    "start": 2417.04,
    "duration": 5.36
  },
  {
    "text": "so a map takes so if i press command p",
    "start": 2419.2,
    "duration": 6.72
  },
  {
    "text": "have a look it takes a function",
    "start": 2422.4,
    "duration": 4.719
  },
  {
    "text": "of type",
    "start": 2425.92,
    "duration": 4.24
  },
  {
    "text": "question mark super and then person",
    "start": 2427.119,
    "duration": 6.72
  },
  {
    "text": "and then and then comma question mark",
    "start": 2430.16,
    "duration": 6.08
  },
  {
    "text": "so if you're not familiar with functions",
    "start": 2433.839,
    "duration": 5.121
  },
  {
    "text": "and how they work check my course on",
    "start": 2436.24,
    "duration": 5.119
  },
  {
    "text": "java functional programming where i go",
    "start": 2438.96,
    "duration": 4.72
  },
  {
    "text": "over all of this",
    "start": 2441.359,
    "duration": 4.881
  },
  {
    "text": "but basically what we have to do in here",
    "start": 2443.68,
    "duration": 6.24
  },
  {
    "text": "is to pass a function and the function",
    "start": 2446.24,
    "duration": 4.8
  },
  {
    "text": "returns",
    "start": 2449.92,
    "duration": 4.24
  },
  {
    "text": "something from it right so the map takes",
    "start": 2451.04,
    "duration": 5.52
  },
  {
    "text": "the person itself so here let me just",
    "start": 2454.16,
    "duration": 4.72
  },
  {
    "text": "say person",
    "start": 2456.56,
    "duration": 5.68
  },
  {
    "text": "and what we want to do with this person",
    "start": 2458.88,
    "duration": 5.52
  },
  {
    "text": "is the following so here",
    "start": 2462.24,
    "duration": 5.599
  },
  {
    "text": "what i want to do is i want to return",
    "start": 2464.4,
    "duration": 6.959
  },
  {
    "text": "and then i want to say person",
    "start": 2467.839,
    "duration": 5.28
  },
  {
    "text": "and then i want to say new",
    "start": 2471.359,
    "duration": 3.76
  },
  {
    "text": "and then person",
    "start": 2473.119,
    "duration": 4.0
  },
  {
    "text": "dto",
    "start": 2475.119,
    "duration": 5.281
  },
  {
    "text": "and then inside we can say person",
    "start": 2477.119,
    "duration": 6.161
  },
  {
    "text": "dot get id",
    "start": 2480.4,
    "duration": 4.32
  },
  {
    "text": "person",
    "start": 2483.28,
    "duration": 2.559
  },
  {
    "text": "dot",
    "start": 2484.72,
    "duration": 3.68
  },
  {
    "text": "and then get first name",
    "start": 2485.839,
    "duration": 5.681
  },
  {
    "text": "and then person dot and then get h",
    "start": 2488.4,
    "duration": 4.88
  },
  {
    "text": "and in fact sometimes you might see",
    "start": 2491.52,
    "duration": 4.48
  },
  {
    "text": "people say p instead of the actual full",
    "start": 2493.28,
    "duration": 3.6
  },
  {
    "text": "name",
    "start": 2496.0,
    "duration": 2.4
  },
  {
    "text": "but to me it doesn't really matter",
    "start": 2496.88,
    "duration": 2.4
  },
  {
    "text": "because",
    "start": 2498.4,
    "duration": 3.199
  },
  {
    "text": "i prefer to use the full name",
    "start": 2499.28,
    "duration": 3.36
  },
  {
    "text": "so",
    "start": 2501.599,
    "duration": 2.561
  },
  {
    "text": "you can see here",
    "start": 2502.64,
    "duration": 3.6
  },
  {
    "text": "i'm returning immediately so what you",
    "start": 2504.16,
    "duration": 4.159
  },
  {
    "text": "could do also is if i extract this to a",
    "start": 2506.24,
    "duration": 3.28
  },
  {
    "text": "variable",
    "start": 2508.319,
    "duration": 3.841
  },
  {
    "text": "maybe this is easy for you to read",
    "start": 2509.52,
    "duration": 4.72
  },
  {
    "text": "there we go and if i put this on a new",
    "start": 2512.16,
    "duration": 4.32
  },
  {
    "text": "line just like that",
    "start": 2514.24,
    "duration": 3.76
  },
  {
    "text": "so you see everything",
    "start": 2516.48,
    "duration": 2.4
  },
  {
    "text": "right",
    "start": 2518.0,
    "duration": 2.839
  },
  {
    "text": "so have a look",
    "start": 2518.88,
    "duration": 5.92
  },
  {
    "text": "people.stream and also new line here",
    "start": 2520.839,
    "duration": 7.24
  },
  {
    "text": "and what we do is we say map",
    "start": 2524.8,
    "duration": 6.96
  },
  {
    "text": "so we want to map the person into",
    "start": 2528.079,
    "duration": 5.361
  },
  {
    "text": "this dto",
    "start": 2531.76,
    "duration": 3.76
  },
  {
    "text": "and then we return",
    "start": 2533.44,
    "duration": 4.96
  },
  {
    "text": "so now that we are done in here and you",
    "start": 2535.52,
    "duration": 5.28
  },
  {
    "text": "can also perform filter",
    "start": 2538.4,
    "duration": 5.439
  },
  {
    "text": "distinct take while drop while find",
    "start": 2540.8,
    "duration": 5.519
  },
  {
    "text": "first and all that stuff right",
    "start": 2543.839,
    "duration": 5.28
  },
  {
    "text": "but all i want is to terminate this with",
    "start": 2546.319,
    "duration": 4.481
  },
  {
    "text": "collectors",
    "start": 2549.119,
    "duration": 3.121
  },
  {
    "text": "and then two",
    "start": 2550.8,
    "duration": 4.0
  },
  {
    "text": "and then list",
    "start": 2552.24,
    "duration": 5.119
  },
  {
    "text": "and that's all i want now if i press",
    "start": 2554.8,
    "duration": 5.039
  },
  {
    "text": "command shift v or",
    "start": 2557.359,
    "duration": 5.921
  },
  {
    "text": "control shift v on windows so here",
    "start": 2559.839,
    "duration": 7.121
  },
  {
    "text": "let me just name this as um dtos right",
    "start": 2563.28,
    "duration": 4.48
  },
  {
    "text": "here",
    "start": 2566.96,
    "duration": 3.359
  },
  {
    "text": "and have a look so you can see that we",
    "start": 2567.76,
    "duration": 6.0
  },
  {
    "text": "went from one data type so list of",
    "start": 2570.319,
    "duration": 4.961
  },
  {
    "text": "person to",
    "start": 2573.76,
    "duration": 4.0
  },
  {
    "text": "list of person dto",
    "start": 2575.28,
    "duration": 4.16
  },
  {
    "text": "so this is what the",
    "start": 2577.76,
    "duration": 3.28
  },
  {
    "text": "map allows us to do",
    "start": 2579.44,
    "duration": 3.919
  },
  {
    "text": "and obviously we can then perform a for",
    "start": 2581.04,
    "duration": 4.72
  },
  {
    "text": "reach so dtos",
    "start": 2583.359,
    "duration": 4.24
  },
  {
    "text": "dot for reach",
    "start": 2585.76,
    "duration": 4.16
  },
  {
    "text": "and then system",
    "start": 2587.599,
    "duration": 6.561
  },
  {
    "text": "dot out column column print line",
    "start": 2589.92,
    "duration": 5.919
  },
  {
    "text": "so if i run this",
    "start": 2594.16,
    "duration": 5.199
  },
  {
    "text": "and also let me just say that so assert",
    "start": 2595.839,
    "duration": 5.76
  },
  {
    "text": "that i want to show you that the sizes",
    "start": 2599.359,
    "duration": 4.0
  },
  {
    "text": "are the exact same thing so i'm not",
    "start": 2601.599,
    "duration": 3.041
  },
  {
    "text": "lying to you",
    "start": 2603.359,
    "duration": 3.121
  },
  {
    "text": "so let me just put this here",
    "start": 2604.64,
    "duration": 4.16
  },
  {
    "text": "and let me import so import static",
    "start": 2606.48,
    "duration": 3.359
  },
  {
    "text": "method",
    "start": 2608.8,
    "duration": 1.84
  },
  {
    "text": "and",
    "start": 2609.839,
    "duration": 2.801
  },
  {
    "text": "the third one so",
    "start": 2610.64,
    "duration": 4.719
  },
  {
    "text": "assertions though assert that",
    "start": 2612.64,
    "duration": 6.32
  },
  {
    "text": "and here i'm going to say people",
    "start": 2615.359,
    "duration": 6.72
  },
  {
    "text": "dot and then size",
    "start": 2618.96,
    "duration": 4.24
  },
  {
    "text": "dot",
    "start": 2622.079,
    "duration": 3.441
  },
  {
    "text": "is equal to",
    "start": 2623.2,
    "duration": 6.24
  },
  {
    "text": "and then dtos dot size",
    "start": 2625.52,
    "duration": 4.96
  },
  {
    "text": "so",
    "start": 2629.44,
    "duration": 3.6
  },
  {
    "text": "basically i'm just showing you that i'm",
    "start": 2630.48,
    "duration": 4.639
  },
  {
    "text": "not taking anything from this i'm not",
    "start": 2633.04,
    "duration": 3.36
  },
  {
    "text": "modifying",
    "start": 2635.119,
    "duration": 2.881
  },
  {
    "text": "the list all i'm doing is just a",
    "start": 2636.4,
    "duration": 5.04
  },
  {
    "text": "transformation so if i run this",
    "start": 2638.0,
    "duration": 5.52
  },
  {
    "text": "you should see that everything should",
    "start": 2641.44,
    "duration": 4.639
  },
  {
    "text": "work the test should pass and we should",
    "start": 2643.52,
    "duration": 5.36
  },
  {
    "text": "have all the details have a look",
    "start": 2646.079,
    "duration": 5.601
  },
  {
    "text": "so you can see that we went from a list",
    "start": 2648.88,
    "duration": 4.239
  },
  {
    "text": "of person to",
    "start": 2651.68,
    "duration": 4.8
  },
  {
    "text": "a list of uh persons dto and you can see",
    "start": 2653.119,
    "duration": 4.881
  },
  {
    "text": "this list is quite huge so i think",
    "start": 2656.48,
    "duration": 4.32
  },
  {
    "text": "there's a thousand in here",
    "start": 2658.0,
    "duration": 5.839
  },
  {
    "text": "and there you have it so obviously",
    "start": 2660.8,
    "duration": 5.279
  },
  {
    "text": "you can then perform filters so on and",
    "start": 2663.839,
    "duration": 4.641
  },
  {
    "text": "so forth so here for example",
    "start": 2666.079,
    "duration": 4.961
  },
  {
    "text": "if before you map you want to say dot",
    "start": 2668.48,
    "duration": 4.16
  },
  {
    "text": "and then filter",
    "start": 2671.04,
    "duration": 3.68
  },
  {
    "text": "and this takes person",
    "start": 2672.64,
    "duration": 4.88
  },
  {
    "text": "and this is a predicate so",
    "start": 2674.72,
    "duration": 5.2
  },
  {
    "text": "let's just say for example",
    "start": 2677.52,
    "duration": 4.72
  },
  {
    "text": "a person dot",
    "start": 2679.92,
    "duration": 4.88
  },
  {
    "text": "and then get age",
    "start": 2682.24,
    "duration": 6.4
  },
  {
    "text": "is greater than 20 for example right",
    "start": 2684.8,
    "duration": 7.44
  },
  {
    "text": "so if i run this you should see that",
    "start": 2688.64,
    "duration": 6.719
  },
  {
    "text": "we should only have people whose age are",
    "start": 2692.24,
    "duration": 5.04
  },
  {
    "text": "bigger than 20.",
    "start": 2695.359,
    "duration": 4.561
  },
  {
    "text": "and oops so you can see that now the",
    "start": 2697.28,
    "duration": 4.64
  },
  {
    "text": "assertion fails because",
    "start": 2699.92,
    "duration": 3.36
  },
  {
    "text": "we",
    "start": 2701.92,
    "duration": 4.399
  },
  {
    "text": "expected down here for them to be the",
    "start": 2703.28,
    "duration": 5.44
  },
  {
    "text": "same size but they're not because i have",
    "start": 2706.319,
    "duration": 3.841
  },
  {
    "text": "filtered out",
    "start": 2708.72,
    "duration": 2.56
  },
  {
    "text": "few",
    "start": 2710.16,
    "duration": 2.24
  },
  {
    "text": "people",
    "start": 2711.28,
    "duration": 2.0
  },
  {
    "text": "right",
    "start": 2712.4,
    "duration": 2.8
  },
  {
    "text": "so obviously",
    "start": 2713.28,
    "duration": 4.24
  },
  {
    "text": "i can then remove this",
    "start": 2715.2,
    "duration": 4.159
  },
  {
    "text": "is no longer the case",
    "start": 2717.52,
    "duration": 3.52
  },
  {
    "text": "and if i run it",
    "start": 2719.359,
    "duration": 4.96
  },
  {
    "text": "you should see the output",
    "start": 2721.04,
    "duration": 4.88
  },
  {
    "text": "there we go and you can see all the",
    "start": 2724.319,
    "duration": 3.601
  },
  {
    "text": "edges",
    "start": 2725.92,
    "duration": 3.84
  },
  {
    "text": "and one thing that i want to show you so",
    "start": 2727.92,
    "duration": 4.96
  },
  {
    "text": "before we finish so here what you can do",
    "start": 2729.76,
    "duration": 5.359
  },
  {
    "text": "is if you want you can inline this so",
    "start": 2732.88,
    "duration": 4.16
  },
  {
    "text": "instead of saying person",
    "start": 2735.119,
    "duration": 4.641
  },
  {
    "text": "you can just say here return",
    "start": 2737.04,
    "duration": 4.319
  },
  {
    "text": "so this",
    "start": 2739.76,
    "duration": 5.04
  },
  {
    "text": "like this so return",
    "start": 2741.359,
    "duration": 3.441
  },
  {
    "text": "just like this and then i can remove",
    "start": 2745.04,
    "duration": 3.36
  },
  {
    "text": "this one here",
    "start": 2746.96,
    "duration": 4.48
  },
  {
    "text": "and also i can remove the return keyword",
    "start": 2748.4,
    "duration": 4.8
  },
  {
    "text": "so that's redundant because i can",
    "start": 2751.44,
    "duration": 4.159
  },
  {
    "text": "replace it with lambda expression",
    "start": 2753.2,
    "duration": 4.48
  },
  {
    "text": "and have a look so this is beautiful",
    "start": 2755.599,
    "duration": 3.921
  },
  {
    "text": "stuff so let me just put this on a new",
    "start": 2757.68,
    "duration": 4.159
  },
  {
    "text": "line so you can see everything",
    "start": 2759.52,
    "duration": 4.48
  },
  {
    "text": "and finally collect",
    "start": 2761.839,
    "duration": 4.881
  },
  {
    "text": "so you can see that we went from a list",
    "start": 2764.0,
    "duration": 3.599
  },
  {
    "text": "then",
    "start": 2766.72,
    "duration": 3.44
  },
  {
    "text": "we have our stream in here",
    "start": 2767.599,
    "duration": 5.681
  },
  {
    "text": "we filter we map and then we collect",
    "start": 2770.16,
    "duration": 4.88
  },
  {
    "text": "back to a list",
    "start": 2773.28,
    "duration": 4.88
  },
  {
    "text": "now finally you see this right here so",
    "start": 2775.04,
    "duration": 5.68
  },
  {
    "text": "this map so if i extract this to a",
    "start": 2778.16,
    "duration": 3.919
  },
  {
    "text": "variable i just want you to see",
    "start": 2780.72,
    "duration": 3.599
  },
  {
    "text": "something have a look so this is",
    "start": 2782.079,
    "duration": 4.481
  },
  {
    "text": "actually a function",
    "start": 2784.319,
    "duration": 4.241
  },
  {
    "text": "so if you never done functional",
    "start": 2786.56,
    "duration": 3.92
  },
  {
    "text": "programming with java this will not make",
    "start": 2788.56,
    "duration": 3.12
  },
  {
    "text": "sense to you",
    "start": 2790.48,
    "duration": 4.48
  },
  {
    "text": "but this is what it is have a look so",
    "start": 2791.68,
    "duration": 4.56
  },
  {
    "text": "it's a function",
    "start": 2794.96,
    "duration": 4.879
  },
  {
    "text": "that takes a person and then returns a",
    "start": 2796.24,
    "duration": 5.359
  },
  {
    "text": "person dto",
    "start": 2799.839,
    "duration": 4.48
  },
  {
    "text": "and then the input is a person and here",
    "start": 2801.599,
    "duration": 5.601
  },
  {
    "text": "i'm just returning immediately this new",
    "start": 2804.319,
    "duration": 4.481
  },
  {
    "text": "person",
    "start": 2807.2,
    "duration": 3.52
  },
  {
    "text": "so there you have it",
    "start": 2808.8,
    "duration": 4.799
  },
  {
    "text": "and something that came into my mind is",
    "start": 2810.72,
    "duration": 6.16
  },
  {
    "text": "so because in here have a look i do have",
    "start": 2813.599,
    "duration": 6.24
  },
  {
    "text": "this method so public static",
    "start": 2816.88,
    "duration": 5.199
  },
  {
    "text": "person dto right here",
    "start": 2819.839,
    "duration": 4.48
  },
  {
    "text": "so this is a map",
    "start": 2822.079,
    "duration": 4.0
  },
  {
    "text": "function that takes person and then",
    "start": 2824.319,
    "duration": 4.481
  },
  {
    "text": "returns right here we can actually use",
    "start": 2826.079,
    "duration": 5.601
  },
  {
    "text": "it right so basically",
    "start": 2828.8,
    "duration": 5.279
  },
  {
    "text": "let me just remove this",
    "start": 2831.68,
    "duration": 4.08
  },
  {
    "text": "and i can say",
    "start": 2834.079,
    "duration": 3.201
  },
  {
    "text": "person",
    "start": 2835.76,
    "duration": 4.24
  },
  {
    "text": "and then person dto",
    "start": 2837.28,
    "duration": 6.24
  },
  {
    "text": "method reference and then map",
    "start": 2840.0,
    "duration": 6.4
  },
  {
    "text": "so this works because",
    "start": 2843.52,
    "duration": 4.4
  },
  {
    "text": "the map",
    "start": 2846.4,
    "duration": 3.36
  },
  {
    "text": "takes a person",
    "start": 2847.92,
    "duration": 3.439
  },
  {
    "text": "right here and then returns something",
    "start": 2849.76,
    "duration": 4.88
  },
  {
    "text": "else well i can pass it to my dto map",
    "start": 2851.359,
    "duration": 4.161
  },
  {
    "text": "function",
    "start": 2854.64,
    "duration": 4.0
  },
  {
    "text": "because it expects a person",
    "start": 2855.52,
    "duration": 4.96
  },
  {
    "text": "and then and then it returns",
    "start": 2858.64,
    "duration": 3.6
  },
  {
    "text": "d dto",
    "start": 2860.48,
    "duration": 3.599
  },
  {
    "text": "so if i was to extract this to a",
    "start": 2862.24,
    "duration": 3.68
  },
  {
    "text": "variable so have a look",
    "start": 2864.079,
    "duration": 4.321
  },
  {
    "text": "so it's it's a function",
    "start": 2865.92,
    "duration": 5.199
  },
  {
    "text": "it's a function that takes person",
    "start": 2868.4,
    "duration": 5.04
  },
  {
    "text": "returns a person dto",
    "start": 2871.119,
    "duration": 3.681
  },
  {
    "text": "and then",
    "start": 2873.44,
    "duration": 3.44
  },
  {
    "text": "all he does just calls method reference",
    "start": 2874.8,
    "duration": 3.759
  },
  {
    "text": "so this is actually pointless so that's",
    "start": 2876.88,
    "duration": 5.12
  },
  {
    "text": "why i've inlined it like so",
    "start": 2878.559,
    "duration": 5.921
  },
  {
    "text": "so there you have it you have",
    "start": 2882.0,
    "duration": 5.359
  },
  {
    "text": "this right here or you can have the map",
    "start": 2884.48,
    "duration": 5.44
  },
  {
    "text": "function within your pojos and it's",
    "start": 2887.359,
    "duration": 4.881
  },
  {
    "text": "completely up to you how you",
    "start": 2889.92,
    "duration": 5.12
  },
  {
    "text": "decide to do things but this is the",
    "start": 2892.24,
    "duration": 5.44
  },
  {
    "text": "general idea of the map",
    "start": 2895.04,
    "duration": 5.12
  },
  {
    "text": "and basically allows you to transform",
    "start": 2897.68,
    "duration": 5.679
  },
  {
    "text": "from one data type to another and bear",
    "start": 2900.16,
    "duration": 7.28
  },
  {
    "text": "in mind that we went from a list of",
    "start": 2903.359,
    "duration": 7.361
  },
  {
    "text": "person to a list of person dtos",
    "start": 2907.44,
    "duration": 4.56
  },
  {
    "text": "but this could be",
    "start": 2910.72,
    "duration": 3.119
  },
  {
    "text": "anything that you want literally",
    "start": 2912.0,
    "duration": 3.04
  },
  {
    "text": "anything",
    "start": 2913.839,
    "duration": 3.041
  },
  {
    "text": "that's all for now catch me on the next",
    "start": 2915.04,
    "duration": 4.0
  },
  {
    "text": "one",
    "start": 2916.88,
    "duration": 2.16
  },
  {
    "text": "okey dokey i hope that you saw the power",
    "start": 2924.559,
    "duration": 4.961
  },
  {
    "text": "of java streams and if you want to",
    "start": 2927.04,
    "duration": 4.799
  },
  {
    "text": "enroll to the entire course there is a",
    "start": 2929.52,
    "duration": 3.839
  },
  {
    "text": "coupon code",
    "start": 2931.839,
    "duration": 3.76
  },
  {
    "text": "right here or maybe somewhere here where",
    "start": 2933.359,
    "duration": 4.641
  },
  {
    "text": "you can just click and enroll and get a",
    "start": 2935.599,
    "duration": 3.601
  },
  {
    "text": "discount",
    "start": 2938.0,
    "duration": 3.04
  },
  {
    "text": "lots of my students have benefited from",
    "start": 2939.2,
    "duration": 4.24
  },
  {
    "text": "this course in my previous company we",
    "start": 2941.04,
    "duration": 4.48
  },
  {
    "text": "used to use streams quite a lot that's",
    "start": 2943.44,
    "duration": 3.919
  },
  {
    "text": "why i decided to record a course",
    "start": 2945.52,
    "duration": 4.319
  },
  {
    "text": "specifically on streams because it",
    "start": 2947.359,
    "duration": 3.921
  },
  {
    "text": "allows you",
    "start": 2949.839,
    "duration": 4.161
  },
  {
    "text": "to write code that really matters",
    "start": 2951.28,
    "duration": 5.279
  },
  {
    "text": "instead of having to worry about all the",
    "start": 2954.0,
    "duration": 4.88
  },
  {
    "text": "moving parts of your code",
    "start": 2956.559,
    "duration": 4.321
  },
  {
    "text": "so if you're not part of the amigos code",
    "start": 2958.88,
    "duration": 3.92
  },
  {
    "text": "community go ahead and join both the",
    "start": 2960.88,
    "duration": 3.52
  },
  {
    "text": "private facebook group as well as",
    "start": 2962.8,
    "duration": 4.16
  },
  {
    "text": "discord the community is growing and i",
    "start": 2964.4,
    "duration": 4.48
  },
  {
    "text": "would love to see you there that's all",
    "start": 2966.96,
    "duration": 6.68
  },
  {
    "text": "for now i'll catch you on the next one",
    "start": 2968.88,
    "duration": 4.76
  },
  {
    "text": "you",
    "start": 2998.72,
    "duration": 2.08
  }
]